{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from 'react';\nimport styles from '../index.less';\nimport LayoutHeader from '../../components/LayoutHeader';\nimport { useCurrentTab, CurrentTabProvider } from '../../utils/hooks/useCurrentTab';\nimport { ContentSwitcher } from '../../components/ContentSwitcher';\nimport { useComponentDidMount } from '../../utils/hooks/useComponentDidMount';\nimport { useEffect, useState } from 'react';\nimport { useResizeCallback } from '../../utils/hooks/useResizeCallback';\nimport ProjectDetailItem from '../../components/Projects/ProjectDetail';\nimport Profile from '../../components/Profile';\nimport Projects from '../../components/Projects';\nvar DESIGN_WIDTH = 1920;\nvar COMMON_STATIC_PATH = '/static/images/projectDetails/img';\nvar Info = {\n  images: [{\n    src: COMMON_STATIC_PATH + '6.jpg',\n    sources: [{\n      src: COMMON_STATIC_PATH + '6.webp',\n      type: 'image/webp'\n    }],\n    preview_src: COMMON_STATIC_PATH + '6-preview.jpg',\n    preview_sources: [{\n      src: COMMON_STATIC_PATH + '6-preview.webp',\n      type: 'image/webp'\n    }],\n    alt: 'String board'\n  }],\n  mainColor: '#81501E',\n  title: 'Stringboard',\n  desc: ['an input tool and', 'an electronic instrument'],\n  tags: ['Integrated Product Development | Interaction Design | Personal Work | Apr 2017 '],\n  detail_images_meta: {\n    dir: '/static/images/projectDetails/stringboard',\n    num: 5\n  },\n  details: 'Stringboard is an input tool as well as an electronic instrument, inspired by Chinese instrument Guqin, bringing the ancient Chinese poetic experience to modern life. \\n' + 'Stringboard comes from the combination of “string” and “board”. The long-shaped metal “string” imitates the image of the string, applying the surface acoustic wave touch technology, so that the user only needs to stroke slightly to input information and use unique shortcut input gesture. The stroking and swiping finger gestures are like playing the Guqin. And Stringboard applys natural material, such as black walnut or bamboo, which highlights the metal string at the same time.'\n};\nvar menuItems = [{\n  key: 'stringBoard',\n  label: 'StringBoard'\n}];\n\nvar InnerLayout = function InnerLayout() {\n  var _useCurrentTab = useCurrentTab(),\n      scale = _useCurrentTab.state.scale.scale,\n      _useCurrentTab$action = _useCurrentTab.actions,\n      setScale = _useCurrentTab$action.setScale,\n      setCurrentTab = _useCurrentTab$action.setCurrentTab;\n\n  var _useState = useState(true),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var fallBackReactive = function fallBackReactive() {\n    setScale(1);\n    var scale = Math.min(document.body.clientWidth / 1920, 1);\n    var metaEl = document.querySelector('meta[name=\"viewport\"]');\n\n    if (!metaEl) {\n      metaEl = document.createElement('meta');\n      metaEl.setAttribute('name', 'viewport');\n      metaEl.setAttribute('content', 'width=device-width, initial-scale=' + scale + ', maximum-scale=' + scale + ', minimum-scale=' + scale + ', user-scalable=no');\n      document.documentElement.firstElementChild.appendChild(metaEl);\n    } else {\n      metaEl.setAttribute('content', 'width=device-width, initial-scale=' + scale + ', maximum-scale=' + scale + ', minimum-scale=' + scale + ', user-scalable=no');\n    }\n\n    window.scrollTo({\n      top: 0\n    });\n  }; // innerWidth 比 body.offsetWidth 稳定\n\n\n  var _useComponentDidMount = useComponentDidMount(function () {\n    setCurrentTab(1);\n\n    if (window.innerWidth >= 700) {\n      var _scale = Math.max(Math.min(window.innerWidth / DESIGN_WIDTH, 1), 0.2);\n\n      setScale(_scale);\n    } else {\n      fallBackReactive();\n    }\n\n    addCallback(function () {\n      var scale = Math.max(Math.min(window.innerWidth / DESIGN_WIDTH, 1), 0.2);\n      document.getElementsByTagName('html')[0].style.fontSize = \"\".concat(scale, \"px\");\n      window.scrollTo({\n        top: 0\n      });\n      setScale(scale);\n    });\n  }),\n      IsDone = _useComponentDidMount.IsDone;\n\n  useEffect(function () {\n    setIsLoading(true);\n    document.getElementsByTagName('html')[0].style.fontSize = \"\".concat(scale, \"px\");\n    window.scrollTo({\n      top: 0\n    }); // 强行将这次setState推迟到下次处理\n\n    setTimeout(function () {\n      setIsLoading(false);\n    }, 0);\n  }, [scale]);\n\n  var _useResizeCallback = useResizeCallback(fallBackReactive),\n      addCallback = _useResizeCallback.addCallback;\n\n  return IsDone && !isLoading ? __jsx(\"div\", {\n    className: styles.layout\n  }, __jsx(LayoutHeader, {\n    menuItems: menuItems\n  }), __jsx(ContentSwitcher, null, __jsx(Profile, null), __jsx(ProjectDetailItem, Info), __jsx(Projects, null)), __jsx(LayoutHeader, {\n    menuItems: menuItems,\n    bodyStyle: {\n      marginTop: '138rem'\n    }\n  })) : null;\n};\n\nvar Layout = function Layout() {\n  return __jsx(CurrentTabProvider, null, __jsx(InnerLayout, null));\n};\n\nexport default Layout;","map":null,"metadata":{},"sourceType":"module"}