{"ast":null,"code":"var _jsxFileName = \"/Users/tomokokawase/Desktop/Portfolio/components/Projects/AutoBackGroundColorSliderPage/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef, useState } from 'react';\nimport { useComponentDidMount } from '../../../utils/hooks/useComponentDidMount'; // @ts-ignore\n\nimport findMainThemeWorker from '../../../utils/workers/findMainTheme.worker';\n\nconst AutoBackGroundColorSliderPage = props => {\n  const {\n    src,\n    alt\n  } = props;\n  const {\n    0: backgroundColor,\n    1: setBackGroundColor\n  } = useState('#ffffff');\n  useComponentDidMount(() => {\n    const img = new Image();\n    img.src = src;\n\n    img.onload = () => {\n      const _worker = useRef(findMainThemeWorker);\n\n      console.log(_worker.current);\n      const worker = new _worker.current();\n\n      if (worker) {\n        worker.postMessage('Hi! From Host');\n\n        worker.onmessage = e => {\n          console.log(e);\n          console.log(JSON.stringify(e));\n        };\n      } // analyze(src)\n      //   .then(value => {\n      //     if (value[0]) {\n      //       setBackGroundColor(value[0].color);\n      //     }\n      //   })\n      //   .catch(err => null);\n\n    };\n  });\n  return __jsx(\"div\", {\n    className: 'section',\n    style: {\n      backgroundColor: backgroundColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: src,\n    alt: alt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }));\n};\n\nexport default AutoBackGroundColorSliderPage;","map":{"version":3,"sources":["/Users/tomokokawase/Desktop/Portfolio/components/Projects/AutoBackGroundColorSliderPage/index.tsx"],"names":["React","useRef","useState","useComponentDidMount","findMainThemeWorker","AutoBackGroundColorSliderPage","props","src","alt","backgroundColor","setBackGroundColor","img","Image","onload","_worker","console","log","current","worker","postMessage","onmessage","e","JSON","stringify"],"mappings":";;AAAA,OAAOA,KAAP,IAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,oBAAT,QAAqC,2CAArC,C,CACA;;AACA,OAAOC,mBAAP,MAAgC,6CAAhC;;AASA,MAAMC,6BAAyC,GAAIC,KAAD,IAAmB;AACnE,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAeF,KAArB;AACA,QAAM;AAAA,OAACG,eAAD;AAAA,OAAkBC;AAAlB,MAAwCR,QAAQ,CAAC,SAAD,CAAtD;AACAC,EAAAA,oBAAoB,CAAC,MAAM;AACzB,UAAMQ,GAAG,GAAG,IAAIC,KAAJ,EAAZ;AACAD,IAAAA,GAAG,CAACJ,GAAJ,GAAUA,GAAV;;AACAI,IAAAA,GAAG,CAACE,MAAJ,GAAa,MAAM;AACjB,YAAMC,OAAO,GAAGb,MAAM,CAACG,mBAAD,CAAtB;;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,OAApB;AACA,YAAMC,MAAM,GAAG,IAAKJ,OAAO,CAACG,OAAb,EAAf;;AACA,UAAIC,MAAJ,EAAY;AACVA,QAAAA,MAAM,CAACC,WAAP,CAAmB,eAAnB;;AACAD,QAAAA,MAAM,CAACE,SAAP,GAAmBC,CAAC,IAAI;AACtBN,UAAAA,OAAO,CAACC,GAAR,CAAYK,CAAZ;AACAN,UAAAA,OAAO,CAACC,GAAR,CAAYM,IAAI,CAACC,SAAL,CAAeF,CAAf,CAAZ;AACD,SAHD;AAID,OAVgB,CAWjB;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,KAlBD;AAmBD,GAtBmB,CAApB;AAuBA,SACE;AACE,IAAA,SAAS,EAAE,SADb;AAEE,IAAA,KAAK,EAAE;AACLZ,MAAAA,eAAe,EAAEA;AADZ,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,IAAA,GAAG,EAAEF,GAAV;AAAe,IAAA,GAAG,EAAEC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD,CApCD;;AAsCA,eAAeH,6BAAf","sourcesContent":["import React, { FC, useRef, useState } from 'react';\nimport { useComponentDidMount } from '../../../utils/hooks/useComponentDidMount';\n// @ts-ignore\nimport findMainThemeWorker from '../../../utils/workers/findMainTheme.worker';\nimport analyze from 'rgbaster';\nimport { css } from 'next/dist/build/webpack/config/blocks/css';\n\ninterface IProps {\n  src: string;\n  alt: string;\n}\n\nconst AutoBackGroundColorSliderPage: FC<IProps> = (props: IProps) => {\n  const { src, alt } = props;\n  const [backgroundColor, setBackGroundColor] = useState('#ffffff');\n  useComponentDidMount(() => {\n    const img = new Image();\n    img.src = src;\n    img.onload = () => {\n      const _worker = useRef(findMainThemeWorker);\n      console.log(_worker.current);\n      const worker = new (_worker.current)();\n      if (worker) {\n        worker.postMessage('Hi! From Host');\n        worker.onmessage = e => {\n          console.log(e);\n          console.log(JSON.stringify(e));\n        };\n      }\n      // analyze(src)\n      //   .then(value => {\n      //     if (value[0]) {\n      //       setBackGroundColor(value[0].color);\n      //     }\n      //   })\n      //   .catch(err => null);\n    };\n  });\n  return (\n    <div\n      className={'section'}\n      style={{\n        backgroundColor: backgroundColor\n      }}\n    >\n      <img src={src} alt={alt} />\n    </div>\n  );\n};\n\nexport default AutoBackGroundColorSliderPage;\n"]},"metadata":{},"sourceType":"module"}