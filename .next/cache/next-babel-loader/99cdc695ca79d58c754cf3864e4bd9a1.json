{"ast":null,"code":"var _jsxFileName = \"/Users/tomokokawase/Desktop/Portfolio/components/Projects/AutoBackGroundColorSliderPage/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useComponentDidMount } from '../../../utils/hooks/useComponentDidMount'; // @ts-ignore\n\nimport findMainThemeWorker from 'worker-loader?name=static/[hash].worker.js!../../../utils/workers/findMainTheme.worker';\nimport getData, { analyze } from '../../../utils/rgbaster';\n\nconst AutoBackGroundColorSliderPage = props => {\n  const {\n    src,\n    alt,\n    preview_src\n  } = props;\n  const {\n    0: backgroundColor,\n    1: setBackGroundColor\n  } = useState('#ffffff');\n  useComponentDidMount(() => {\n    const img = new Image();\n    img.src = preview_src;\n\n    img.onload = () => {\n      const worker = new findMainThemeWorker();\n      worker.postMessage(src);\n\n      worker.onmessage = e => {\n        console.log(e);\n        console.log(JSON.stringify(e));\n      };\n\n      getData(preview_src).then(value => {\n        const colors = analyze(value);\n\n        if (colors[0]) {\n          setBackGroundColor(colors[0].color);\n        }\n      }).catch(err => console.log(err));\n    };\n  });\n  return __jsx(\"div\", {\n    className: 'section',\n    style: {\n      backgroundColor: backgroundColor,\n      transition: '0.6s ease-in-out'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: src,\n    alt: alt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n};\n\nexport default AutoBackGroundColorSliderPage;","map":{"version":3,"sources":["/Users/tomokokawase/Desktop/Portfolio/components/Projects/AutoBackGroundColorSliderPage/index.tsx"],"names":["React","useState","useComponentDidMount","findMainThemeWorker","getData","analyze","AutoBackGroundColorSliderPage","props","src","alt","preview_src","backgroundColor","setBackGroundColor","img","Image","onload","worker","postMessage","onmessage","e","console","log","JSON","stringify","then","value","colors","color","catch","err","transition"],"mappings":";;AAAA,OAAOA,KAAP,IAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,oBAAT,QAAqC,2CAArC,C,CACA;;AACA,OAAOC,mBAAP,MAAgC,wFAAhC;AACA,OAAOC,OAAP,IAAiBC,OAAjB,QAA+B,yBAA/B;;AASA,MAAMC,6BAAyC,GAAIC,KAAD,IAAmB;AACnE,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,GAAP;AAAYC,IAAAA;AAAZ,MAA4BH,KAAlC;AACA,QAAM;AAAA,OAACI,eAAD;AAAA,OAAkBC;AAAlB,MAAwCX,QAAQ,CAAC,SAAD,CAAtD;AACAC,EAAAA,oBAAoB,CAAC,MAAM;AACzB,UAAMW,GAAG,GAAG,IAAIC,KAAJ,EAAZ;AACAD,IAAAA,GAAG,CAACL,GAAJ,GAAUE,WAAV;;AACAG,IAAAA,GAAG,CAACE,MAAJ,GAAa,MAAM;AACjB,YAAMC,MAAM,GAAG,IAAIb,mBAAJ,EAAf;AACAa,MAAAA,MAAM,CAACC,WAAP,CAAmBT,GAAnB;;AACAQ,MAAAA,MAAM,CAACE,SAAP,GAAmBC,CAAC,IAAI;AACtBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,CAAf,CAAZ;AACD,OAHD;;AAIAf,MAAAA,OAAO,CAACM,WAAD,CAAP,CACGc,IADH,CACQC,KAAK,IAAI;AACb,cAAMC,MAAM,GAAGrB,OAAO,CAACoB,KAAD,CAAtB;;AACA,YAAIC,MAAM,CAAC,CAAD,CAAV,EAAe;AACbd,UAAAA,kBAAkB,CAACc,MAAM,CAAC,CAAD,CAAN,CAAUC,KAAX,CAAlB;AACD;AACF,OANH,EAOGC,KAPH,CAOSC,GAAG,IAAIT,OAAO,CAACC,GAAR,CAAYQ,GAAZ,CAPhB;AAQD,KAfD;AAgBD,GAnBmB,CAApB;AAoBA,SACE;AACE,IAAA,SAAS,EAAE,SADb;AAEE,IAAA,KAAK,EAAE;AACLlB,MAAAA,eAAe,EAAEA,eADZ;AAELmB,MAAAA,UAAU,EAAE;AAFP,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAK,IAAA,GAAG,EAAEtB,GAAV;AAAe,IAAA,GAAG,EAAEC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD,CAlCD;;AAoCA,eAAeH,6BAAf","sourcesContent":["import React, { FC, useRef, useState } from 'react';\nimport { useComponentDidMount } from '../../../utils/hooks/useComponentDidMount';\n// @ts-ignore\nimport findMainThemeWorker from 'worker-loader?name=static/[hash].worker.js!../../../utils/workers/findMainTheme.worker';\nimport getData, {analyze} from '../../../utils/rgbaster';\nimport { css } from 'next/dist/build/webpack/config/blocks/css';\n\ninterface IProps {\n  src: string;\n  preview_src: string;\n  alt: string;\n}\n\nconst AutoBackGroundColorSliderPage: FC<IProps> = (props: IProps) => {\n  const { src, alt, preview_src } = props;\n  const [backgroundColor, setBackGroundColor] = useState('#ffffff');\n  useComponentDidMount(() => {\n    const img = new Image();\n    img.src = preview_src;\n    img.onload = () => {\n      const worker = new findMainThemeWorker();\n      worker.postMessage(src);\n      worker.onmessage = e => {\n        console.log(e);\n        console.log(JSON.stringify(e));\n      };\n      getData(preview_src)\n        .then(value => {\n          const colors = analyze(value);\n          if (colors[0]) {\n            setBackGroundColor(colors[0].color)\n          }\n        })\n        .catch(err => console.log(err));\n    };\n  });\n  return (\n    <div\n      className={'section'}\n      style={{\n        backgroundColor: backgroundColor,\n        transition: '0.6s ease-in-out'\n      }}\n    >\n      <img src={src} alt={alt} />\n    </div>\n  );\n};\n\nexport default AutoBackGroundColorSliderPage;\n"]},"metadata":{},"sourceType":"module"}