{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport styles from './index.module.less';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { useCurrentTab } from '../../utils/hooks/useCurrentTab';\nimport { useComponentDidMount } from '../../utils/hooks/useComponentDidMount';\nimport { useResizeCallback } from '../../utils/hooks/useResizeCallback';\nconst MenuItems = [{\n  key: 'aboutMe',\n  label: 'About Me'\n}, {\n  key: 'projects',\n  label: 'Projects'\n}];\n/**\n * React-Hooks is much more powerful than you thought\n * @constructor\n */\n\nconst LayoutHeader = props => {\n  var _props$bodyStyle;\n\n  const {\n    state: {\n      currentTab: {\n        currentTab\n      },\n      scale: {\n        scale\n      }\n    },\n    actions: {\n      setCurrentTab\n    }\n  } = useCurrentTab(); // 设置小圆点的位置\n\n  const {\n    0: dotX,\n    1: setDotX\n  } = useState(0);\n  const bodyWidth = useRef(null);\n\n  const _MenuItems = MenuItems.map(item => _objectSpread({}, item, {\n    ref: React.useRef()\n  }));\n\n  const {\n    addCallback\n  } = useResizeCallback();\n  const {\n    IsDone\n  } = useComponentDidMount(() => {\n    bodyWidth.current = document.getElementsByTagName('body')[0].offsetWidth;\n    menuItemClickHandler(_MenuItems[currentTab])();\n    addCallback(() => {\n      bodyWidth.current = document.getElementsByTagName('body')[0].offsetWidth;\n      menuItemClickHandler(_MenuItems[currentTab])();\n    });\n  });\n  const menuItemClickHandler = useCallback(item => () => {\n    if (!IsDone) {\n      return;\n    }\n\n    const findIndex = _MenuItems.findIndex(m => {\n      return m.key === item.key;\n    });\n\n    if (!~findIndex) {\n      return;\n    }\n\n    const pageOffSetLeft = (bodyWidth.current - 1600 * scale) / 2;\n    const offsetLeft = item.ref.current.offsetLeft;\n    const offsetWidth = item.ref.current.offsetWidth;\n    setDotX((offsetLeft + offsetWidth / 2 - pageOffSetLeft - 8) / scale);\n    setCurrentTab(findIndex);\n  }, [bodyWidth, IsDone, scale]);\n  useEffect(() => {\n    if (IsDone) {\n      menuItemClickHandler(_MenuItems[currentTab])();\n    }\n  }, [currentTab, scale, IsDone]);\n  return __jsx(\"div\", {\n    style: (_props$bodyStyle = props.bodyStyle) !== null && _props$bodyStyle !== void 0 ? _props$bodyStyle : {}\n  }, __jsx(\"div\", {\n    className: styles['layout-menu-container']\n  }, _MenuItems.map(item => __jsx(\"span\", {\n    key: item.key,\n    ref: item.ref,\n    className: styles['layout-menu-item'],\n    onClick: menuItemClickHandler(item)\n  }, item.label))), __jsx(\"div\", {\n    className: styles['layout-slider']\n  }, __jsx(\"span\", {\n    className: styles['layout-slider-dot'],\n    style: {\n      transform: `translate(${dotX}rem, -8rem)`\n    }\n  }), __jsx(\"div\", {\n    className: styles['layout-slider-line']\n  })));\n};\n\nexport default LayoutHeader;","map":null,"metadata":{},"sourceType":"module"}