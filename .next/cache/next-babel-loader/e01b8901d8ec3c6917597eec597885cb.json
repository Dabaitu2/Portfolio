{"ast":null,"code":"var _jsxFileName = \"/Users/tomokokawase/Desktop/Portfolio/components/Projects/AutoBackGroundColorSliderPage/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useComponentDidMount } from '../../../utils/hooks/useComponentDidMount'; // @ts-ignore\n\nimport findMainThemeWorker from 'worker-loader?name=static/[hash].worker.js!../../../utils/workers/findMainTheme.worker';\nimport getData from '../../../utils/rgbaster';\n\nconst AutoBackGroundColorSliderPage = props => {\n  const {\n    src,\n    alt,\n    preview_src\n  } = props;\n  const {\n    0: backgroundColor,\n    1: setBackGroundColor\n  } = useState('#e2e2e2');\n  useComponentDidMount(() => {\n    const img = new Image();\n    img.src = preview_src;\n\n    img.onload = () => {\n      getData(preview_src).then(value => {\n        // worker 不会阻塞渲染\n        const worker = new findMainThemeWorker();\n        worker.postMessage(value);\n\n        worker.onmessage = e => {\n          setBackGroundColor(e.data);\n        };\n      }).catch(err => console.log(err));\n    };\n  });\n  return __jsx(\"div\", {\n    className: 'section',\n    style: {\n      backgroundColor: backgroundColor,\n      transition: '0.6s ease-in-out'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: src,\n    alt: alt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n};\n\nexport default AutoBackGroundColorSliderPage;","map":{"version":3,"sources":["/Users/tomokokawase/Desktop/Portfolio/components/Projects/AutoBackGroundColorSliderPage/index.tsx"],"names":["React","useState","useComponentDidMount","findMainThemeWorker","getData","AutoBackGroundColorSliderPage","props","src","alt","preview_src","backgroundColor","setBackGroundColor","img","Image","onload","then","value","worker","postMessage","onmessage","e","data","catch","err","console","log","transition"],"mappings":";;AAAA,OAAOA,KAAP,IAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,oBAAT,QAAqC,2CAArC,C,CACA;;AACA,OAAOC,mBAAP,MAAgC,wFAAhC;AACA,OAAOC,OAAP,MAA+B,yBAA/B;;AAQA,MAAMC,6BAAyC,GAAIC,KAAD,IAAmB;AACnE,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,GAAP;AAAYC,IAAAA;AAAZ,MAA4BH,KAAlC;AACA,QAAM;AAAA,OAACI,eAAD;AAAA,OAAkBC;AAAlB,MAAwCV,QAAQ,CAAC,SAAD,CAAtD;AACAC,EAAAA,oBAAoB,CAAC,MAAM;AACzB,UAAMU,GAAG,GAAG,IAAIC,KAAJ,EAAZ;AACAD,IAAAA,GAAG,CAACL,GAAJ,GAAUE,WAAV;;AACAG,IAAAA,GAAG,CAACE,MAAJ,GAAa,MAAM;AACjBV,MAAAA,OAAO,CAACK,WAAD,CAAP,CACGM,IADH,CACQC,KAAK,IAAI;AACb;AACA,cAAMC,MAAM,GAAG,IAAId,mBAAJ,EAAf;AACAc,QAAAA,MAAM,CAACC,WAAP,CAAmBF,KAAnB;;AACAC,QAAAA,MAAM,CAACE,SAAP,GAAmBC,CAAC,IAAI;AACtBT,UAAAA,kBAAkB,CAACS,CAAC,CAACC,IAAH,CAAlB;AACD,SAFD;AAGD,OARH,EASGC,KATH,CASSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAThB;AAUD,KAXD;AAYD,GAfmB,CAApB;AAgBA,SACE;AACE,IAAA,SAAS,EAAE,SADb;AAEE,IAAA,KAAK,EAAE;AACLb,MAAAA,eAAe,EAAEA,eADZ;AAELgB,MAAAA,UAAU,EAAE;AAFP,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAK,IAAA,GAAG,EAAEnB,GAAV;AAAe,IAAA,GAAG,EAAEC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD,CA9BD;;AAgCA,eAAeH,6BAAf","sourcesContent":["import React, { FC, useRef, useState } from 'react';\nimport { useComponentDidMount } from '../../../utils/hooks/useComponentDidMount';\n// @ts-ignore\nimport findMainThemeWorker from 'worker-loader?name=static/[hash].worker.js!../../../utils/workers/findMainTheme.worker';\nimport getData, {analyze} from '../../../utils/rgbaster';\n\ninterface IProps {\n  src: string;\n  preview_src: string;\n  alt: string;\n}\n\nconst AutoBackGroundColorSliderPage: FC<IProps> = (props: IProps) => {\n  const { src, alt, preview_src } = props;\n  const [backgroundColor, setBackGroundColor] = useState('#e2e2e2');\n  useComponentDidMount(() => {\n    const img = new Image();\n    img.src = preview_src;\n    img.onload = () => {\n      getData(preview_src)\n        .then(value => {\n          // worker 不会阻塞渲染\n          const worker = new findMainThemeWorker();\n          worker.postMessage(value);\n          worker.onmessage = e => {\n            setBackGroundColor(e.data)\n          };\n        })\n        .catch(err => console.log(err));\n    };\n  });\n  return (\n    <div\n      className={'section'}\n      style={{\n        backgroundColor: backgroundColor,\n        transition: '0.6s ease-in-out'\n      }}\n    >\n      <img src={src} alt={alt} />\n    </div>\n  );\n};\n\nexport default AutoBackGroundColorSliderPage;\n"]},"metadata":{},"sourceType":"module"}