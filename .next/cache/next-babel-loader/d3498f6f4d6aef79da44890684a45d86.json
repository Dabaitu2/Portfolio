{"ast":null,"code":"import { useEffect, useState } from 'react';\nexport const useComponentDidMount = (handler, postHandler) => {\n  const {\n    0: firstLoaded,\n    1: setFirstLoaded\n  } = useState(false);\n  const {\n    0: IsDone,\n    1: setIsDone\n  } = useState(false);\n  useEffect(() => {\n    if (!firstLoaded) {\n      setFirstLoaded(true);\n    }\n  }, []);\n  useEffect(() => {\n    if (firstLoaded) {\n      handler();\n      setIsDone(true);\n      return postHandler ? () => postHandler() : () => null;\n    }\n\n    return;\n  }, [firstLoaded]);\n  return {\n    firstLoaded,\n    IsDone,\n    setIsDone\n  };\n};","map":{"version":3,"sources":["/Users/tomokokawase/Desktop/Portfolio/utils/hooks/useComponentDidMount.ts"],"names":["useEffect","useState","useComponentDidMount","handler","postHandler","firstLoaded","setFirstLoaded","IsDone","setIsDone"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,MAAMC,oBAAoB,GAAG,CAClCC,OADkC,EAElCC,WAFkC,KAG/B;AACH,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCL,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAA,OAACM,MAAD;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAAC,KAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACK,WAAL,EAAkB;AAChBC,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;AAKAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,WAAJ,EAAiB;AACfF,MAAAA,OAAO;AACPK,MAAAA,SAAS,CAAC,IAAD,CAAT;AACA,aAAOJ,WAAW,GAAG,MAAMA,WAAW,EAApB,GAAyB,MAAM,IAAjD;AACD;;AACD;AACD,GAPQ,EAON,CAACC,WAAD,CAPM,CAAT;AAQA,SAAO;AAAEA,IAAAA,WAAF;AAAeE,IAAAA,MAAf;AAAuBC,IAAAA;AAAvB,GAAP;AACD,CApBM","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport const useComponentDidMount = (\n  handler: () => any,\n  postHandler?: () => any,\n) => {\n  const [firstLoaded, setFirstLoaded] = useState(false);\n  const [IsDone, setIsDone] = useState(false);\n  useEffect(() => {\n    if (!firstLoaded) {\n      setFirstLoaded(true);\n    }\n  }, []);\n  useEffect(() => {\n    if (firstLoaded) {\n      handler();\n      setIsDone(true);\n      return postHandler ? () => postHandler() : () => null;\n    }\n    return;\n  }, [firstLoaded]);\n  return { firstLoaded, IsDone, setIsDone };\n};\n"]},"metadata":{},"sourceType":"module"}