{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nvar store = {\n  currentTab: {\n    currentTab: 0\n  },\n  test: {\n    count: 0\n  }\n};\n\nvar currentTab = function currentTab(state, action) {\n  if (action.type === 'setCurrentTab') {\n    return _objectSpread({}, state, {\n      currentTab: action.value\n    });\n  } else {\n    throw new Error();\n  }\n};\n\nvar test = function test(state, action) {\n  if (action.type === 'increment') {\n    return _objectSpread({}, state, {\n      count: state.count + action.value\n    });\n  } else {\n    throw new Error();\n  }\n}; // 自定义合并reducer函数\n// 根据reducer定义的名称，拿到state中的对应名称下的state\n// state 也是一个复合 state\n\n\nvar combineReducers = function combineReducers(reducers) {\n  return function (state, action) {\n    return _Object$keys(reducers) // 拿到的state只是属于自己的key的那部分\n    .map(function (k) {\n      return _defineProperty({}, k, reducers[k](state[k], action));\n    }).reduce(function (acc, cur) {\n      return _Object$assign({}, acc, cur);\n    });\n  };\n};\n\nvar reducers = combineReducers({\n  currentTab: currentTab,\n  test: test\n});\nconsole.log(reducers);\nvar state,\n    actions,\n    CurrentTabContext,\n    hasCalled = false;\nexport var _useCurrentTab = function _useCurrentTab() {\n  var _React$useReducer = React.useReducer(reducers, store),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var actions = {\n    setCurrentTab: function setCurrentTab(e) {\n      dispatch({\n        type: 'setCurrentTab',\n        value: e\n      });\n    }\n  }; // 创建Context放在最上层父组件\n\n  var CurrentTabContext = React.createContext({\n    state: state,\n    actions: actions\n  });\n  return {\n    state: state,\n    actions: actions,\n    CurrentTabContext: CurrentTabContext\n  };\n};\nexport var useCurrentTab = function useCurrentTab() {\n  if (!hasCalled) {\n    var _currentTab = _useCurrentTab();\n\n    state = _currentTab.state;\n    actions = _currentTab.actions;\n    CurrentTabContext = _currentTab.CurrentTabContext;\n    hasCalled = true;\n  }\n\n  return {\n    state: state,\n    actions: actions,\n    CurrentTabContext: CurrentTabContext\n  };\n};\nexport function createProvider() {\n  var _React$useReducer3 = React.useReducer(reducers, store),\n      _React$useReducer4 = _slicedToArray(_React$useReducer3, 2),\n      state = _React$useReducer4[0],\n      dispatch = _React$useReducer4[1];\n\n  var CurrentTabContext = React.createContext({\n    state: state,\n    actions: actions\n  });\n}","map":{"version":3,"sources":["/Users/tomokokawase/Desktop/Portfolio/utils/hooks/useCurrentTab.ts"],"names":["React","store","currentTab","test","count","state","action","type","value","Error","combineReducers","reducers","map","k","reduce","acc","cur","console","log","actions","CurrentTabContext","hasCalled","_useCurrentTab","useReducer","dispatch","setCurrentTab","e","createContext","useCurrentTab","createProvider"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport exp from 'constants';\n\nconst store = {\n  currentTab: {\n    currentTab: 0\n  },\n  test: {\n    count: 0\n  }\n};\n\nconst currentTab = (state, action) => {\n  if (action.type === 'setCurrentTab') {\n    return { ...state, currentTab: action.value };\n  } else {\n    throw new Error();\n  }\n};\n\nconst test = (state, action) => {\n  if (action.type === 'increment') {\n    return { ...state, count: state.count + action.value };\n  } else {\n    throw new Error();\n  }\n};\n\n// 自定义合并reducer函数\n// 根据reducer定义的名称，拿到state中的对应名称下的state\n// state 也是一个复合 state\nconst combineReducers = reducers => (state, action) =>\n  Object.keys(reducers)\n    // 拿到的state只是属于自己的key的那部分\n    .map(k => ({ [k]: reducers[k](state[k], action) }))\n    .reduce((acc, cur) => Object.assign({}, acc, cur));\n\nconst reducers = combineReducers({ currentTab, test });\nconsole.log(reducers);\n\nlet state,\n  actions,\n  CurrentTabContext,\n  hasCalled = false;\nexport const _useCurrentTab = () => {\n  const [state, dispatch] = React.useReducer(reducers, store);\n  const actions = {\n    setCurrentTab: e => {\n      dispatch({ type: 'setCurrentTab', value: e });\n    }\n  };\n  // 创建Context放在最上层父组件\n  const CurrentTabContext = React.createContext<{\n    state: { [key: string]: any };\n    actions: typeof actions;\n  }>({ state: state, actions: actions });\n  return { state, actions, CurrentTabContext };\n};\nexport const useCurrentTab = () => {\n  if (!hasCalled) {\n    let currentTab = _useCurrentTab();\n    state = currentTab.state;\n    actions = currentTab.actions;\n    CurrentTabContext = currentTab.CurrentTabContext;\n    hasCalled = true;\n  }\n  return { state, actions, CurrentTabContext };\n};\n\nexport function createProvider() {\n  const [state, dispatch] = React.useReducer(reducers, store);\n  const CurrentTabContext = React.createContext<{\n    state: typeof state;\n    actions: typeof actions;\n  }>({ state: state, actions: actions });\n}\n"]},"metadata":{},"sourceType":"module"}