{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nconst store = {\n  currentTab: 0\n};\n\nconst currentTab = (state, action) => {\n  switch (action.type) {\n    case 'setCurrentTab':\n      return _objectSpread({}, state, {\n        currentTab: action.value\n      });\n\n    default:\n      throw new Error();\n  }\n}; // 自定义合并reducer函数\n\n\nconst combineReducers = reducers => {\n  return function (state, action) {\n    return _Object$keys(reducers).map(k => ({\n      [k]: reducers[k](state[k], action)\n    })).reduce((acc, cur) => _Object$assign({}, acc, cur));\n  };\n};\n\nconst reducers = combineReducers({\n  currentTab\n});\nconst [state, dispatch] = React.useReducer(reducers, store);\nconst actions = {\n  setCurrentTab: e => {\n    dispatch({\n      type: 'setCurrentTab',\n      value: e\n    });\n  }\n}; // 创建Context放在最上层父组件\n\nconst CurrentTabContext = React.createContext({});\nexport { CurrentTabContext, state, actions };","map":{"version":3,"sources":["/Users/tomokokawase/Desktop/Portfolio/utils/hooks/useCurrentTab.ts"],"names":["React","store","currentTab","state","action","type","value","Error","combineReducers","reducers","map","k","reduce","acc","cur","dispatch","useReducer","actions","setCurrentTab","e","CurrentTabContext","createContext"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,KAAK,GAAG;AAAEC,EAAAA,UAAU,EAAE;AAAd,CAAd;;AAEA,MAAMA,UAAU,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,+BAAYF,KAAZ;AAAmBD,QAAAA,UAAU,EAAEE,MAAM,CAACE;AAAtC;;AACF;AACE,YAAM,IAAIC,KAAJ,EAAN;AAJJ;AAMD,CAPD,C,CASA;;;AACA,MAAMC,eAAe,GAAGC,QAAQ,IAAI;AAClC,SAAO,UAASN,KAAT,EAAgBC,MAAhB,EAAwB;AAC7B,WAAO,aAAYK,QAAZ,EACJC,GADI,CACAC,CAAC,KAAK;AAAE,OAACA,CAAD,GAAKF,QAAQ,CAACE,CAAD,CAAR,CAAYR,KAAK,CAACQ,CAAD,CAAjB,EAAsBP,MAAtB;AAAP,KAAL,CADD,EAEJQ,MAFI,CAEG,CAACC,GAAD,EAAMC,GAAN,KAAc,eAAc,EAAd,EAAkBD,GAAlB,EAAuBC,GAAvB,CAFjB,CAAP;AAGD,GAJD;AAKD,CAND;;AAQA,MAAML,QAAQ,GAAGD,eAAe,CAAC;AAAEN,EAAAA;AAAF,CAAD,CAAhC;AACA,MAAM,CAACC,KAAD,EAAQY,QAAR,IAAoBf,KAAK,CAACgB,UAAN,CAAiBP,QAAjB,EAA2BR,KAA3B,CAA1B;AACA,MAAMgB,OAAO,GAAG;AACdC,EAAAA,aAAa,EAAEC,CAAC,IAAI;AAClBJ,IAAAA,QAAQ,CAAC;AAAEV,MAAAA,IAAI,EAAE,eAAR;AAAyBC,MAAAA,KAAK,EAAEa;AAAhC,KAAD,CAAR;AACD;AAHa,CAAhB,C,CAKA;;AACA,MAAMC,iBAAiB,GAAGpB,KAAK,CAACqB,aAAN,CAAyB,EAAzB,CAA1B;AACA,SAASD,iBAAT,EAA4BjB,KAA5B,EAAmCc,OAAnC","sourcesContent":["import React from 'react';\n\nconst store = { currentTab: 0 };\n\nconst currentTab = (state, action) => {\n  switch (action.type) {\n    case 'setCurrentTab':\n      return { ...state, currentTab: action.value };\n    default:\n      throw new Error();\n  }\n};\n\n// 自定义合并reducer函数\nconst combineReducers = reducers => {\n  return function(state, action) {\n    return Object.keys(reducers)\n      .map(k => ({ [k]: reducers[k](state[k], action) }))\n      .reduce((acc, cur) => Object.assign({}, acc, cur));\n  };\n};\n\nconst reducers = combineReducers({ currentTab });\nconst [state, dispatch] = React.useReducer(reducers, store);\nconst actions = {\n  setCurrentTab: e => {\n    dispatch({ type: 'setCurrentTab', value: e });\n  }\n};\n// 创建Context放在最上层父组件\nconst CurrentTabContext = React.createContext<any>({});\nexport { CurrentTabContext, state, actions };\n"]},"metadata":{},"sourceType":"module"}