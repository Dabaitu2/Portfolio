{"ast":null,"code":"var _jsxFileName = \"/Users/tomokokawase/Desktop/Portfolio/utils/hooks/useCurrentTab.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nlet initStore = {\n  currentTab: {\n    currentTab: 1\n  },\n  scale: {\n    scale: 1\n  },\n  test: {\n    count: 0\n  }\n};\n\nconst currentTab = (state, action) => {\n  if (action.type === 'setCurrentTab') {\n    return _objectSpread({}, state, {\n      currentTab: action.value\n    });\n  } else {\n    return state;\n  }\n};\n\nconst test = (state, action) => {\n  if (action.type === 'increment') {\n    return _objectSpread({}, state, {\n      count: state.count + action.value\n    });\n  } else {\n    return state;\n  }\n};\n\nconst scale = (state, action) => {\n  if (action.type === 'setScale') {\n    return _objectSpread({}, state, {\n      scale: action.value\n    });\n  } else {\n    return state;\n  }\n}; // 自定义合并reducer函数\n// 根据reducer定义的名称，拿到state中的对应名称下的state\n// state 也是一个复合 state\n// 返回值依然是个函数\n\n\nconst combineReducers = reducers => (state, action) => Object.keys(reducers) // 拿到的state只是属于自己的key的那部分\n// 对每个reducer 都执行一次处理, 将结果存为新的state[key]\n.map(k => ({\n  [k]: reducers[k](state[k], action)\n})) // 整合出新state返回，看起来就像是一个reducer在干活\n.reduce((acc, cur) => Object.assign({}, acc, cur));\n\nconst reducers = combineReducers({\n  currentTab,\n  test,\n  scale\n});\nexport function createCurrentTab() {\n  const CurrentTabContext = React.createContext(null);\n\n  function CurrentTabProvider(props) {\n    const [state, dispatch] = React.useReducer(reducers, initStore);\n    const actions = {\n      setCurrentTab: e => {\n        dispatch({\n          type: 'setCurrentTab',\n          value: e\n        });\n      },\n      setScale: e => {\n        dispatch({\n          type: 'setScale',\n          value: e\n        });\n      }\n    };\n    return __jsx(CurrentTabContext.Provider, {\n      value: {\n        state,\n        actions\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, props.children);\n  }\n\n  function useCurrentTab() {\n    let value = React.useContext(CurrentTabContext);\n\n    if (!value) {\n      throw new Error('Component must be wrapped with <CurrentTabProvider>');\n    }\n\n    return value;\n  }\n\n  return {\n    CurrentTabProvider,\n    useCurrentTab\n  };\n}\nconst {\n  CurrentTabProvider,\n  useCurrentTab\n} = createCurrentTab();\nexport { CurrentTabProvider, useCurrentTab };","map":{"version":3,"sources":["/Users/tomokokawase/Desktop/Portfolio/utils/hooks/useCurrentTab.tsx"],"names":["React","initStore","currentTab","scale","test","count","state","action","type","value","combineReducers","reducers","Object","keys","map","k","reduce","acc","cur","assign","createCurrentTab","CurrentTabContext","createContext","CurrentTabProvider","props","dispatch","useReducer","actions","setCurrentTab","e","setScale","children","useCurrentTab","useContext","Error"],"mappings":"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","sourcesContent":["import React from 'react';\n\nlet initStore = {\n  currentTab: {\n    currentTab: 1\n  },\n  scale: {\n    scale: 1\n  },\n  test: {\n    count: 0\n  }\n};\n\nconst currentTab = (state, action) => {\n  if (action.type === 'setCurrentTab') {\n    return { ...state, currentTab: action.value };\n  } else {\n    return state;\n  }\n};\n\nconst test = (state, action) => {\n  if (action.type === 'increment') {\n    return { ...state, count: state.count + action.value };\n  } else {\n    return state;\n  }\n};\n\nconst scale = (state, action) => {\n  if (action.type === 'setScale') {\n    return { ...state, scale: action.value };\n  } else {\n    return state;\n  }\n};\n\n// 自定义合并reducer函数\n// 根据reducer定义的名称，拿到state中的对应名称下的state\n// state 也是一个复合 state\n// 返回值依然是个函数\nconst combineReducers = reducers => (state, action) =>\n  Object.keys(reducers)\n    // 拿到的state只是属于自己的key的那部分\n    // 对每个reducer 都执行一次处理, 将结果存为新的state[key]\n    .map(k => ({ [k]: reducers[k](state[k], action) }))\n    // 整合出新state返回，看起来就像是一个reducer在干活\n    .reduce((acc, cur) => Object.assign({}, acc, cur));\n\nconst reducers = combineReducers({ currentTab, test, scale });\n\nexport function createCurrentTab() {\n  const CurrentTabContext = React.createContext<{\n    state: { [key: string]: any };\n    actions: any;\n  }>(null);\n  function CurrentTabProvider(props: { children: any }) {\n    const [state, dispatch] = React.useReducer(reducers, initStore);\n    const actions = {\n      setCurrentTab: e => {\n        dispatch({ type: 'setCurrentTab', value: e });\n      },\n      setScale: e => {\n        dispatch({ type: 'setScale', value: e });\n      }\n    };\n    return (\n      <CurrentTabContext.Provider\n        value={{\n          state,\n          actions\n        }}\n      >\n        {props.children}\n      </CurrentTabContext.Provider>\n    );\n  }\n  function useCurrentTab() {\n    let value = React.useContext(CurrentTabContext);\n    if (!value) {\n      throw new Error('Component must be wrapped with <CurrentTabProvider>');\n    }\n    return value;\n  }\n\n  return { CurrentTabProvider, useCurrentTab };\n}\n\nconst { CurrentTabProvider, useCurrentTab } = createCurrentTab();\nexport { CurrentTabProvider, useCurrentTab };\n"]},"metadata":{},"sourceType":"module"}