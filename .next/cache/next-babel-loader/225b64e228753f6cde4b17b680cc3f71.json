{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/tomokokawase/Desktop/Portfolio/utils/hooks/useCurrentTab.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nconst store = {\n  currentTab: {\n    currentTab: 0\n  },\n  test: {\n    count: 0\n  }\n};\n\nconst currentTab = (state, action) => {\n  if (action.type === 'setCurrentTab') {\n    return _objectSpread({}, state, {\n      currentTab: action.value\n    });\n  } else {\n    return state;\n  }\n};\n\nconst test = (state, action) => {\n  if (action.type === 'increment') {\n    return _objectSpread({}, state, {\n      count: state.count + action.value\n    });\n  } else {\n    return state;\n  }\n}; // 自定义合并reducer函数\n// 根据reducer定义的名称，拿到state中的对应名称下的state\n// state 也是一个复合 state\n// 返回值依然是个函数\n\n\nconst combineReducers = reducers => (state, action) => _Object$keys(reducers) // 拿到的state只是属于自己的key的那部分\n// 对每个reducer 都执行一次处理, 将结果存为新的state[key]\n.map(k => ({\n  [k]: reducers[k](state[k], action)\n})) // 整合出新state返回，看起来就像是一个reducer在干活\n.reduce((acc, cur) => _Object$assign({}, acc, cur));\n\nconst reducers = combineReducers({\n  currentTab,\n  test\n});\nexport function createCurrentTab() {\n  const CurrentTabContext = React.createContext(null);\n\n  function CurrentTabProvider(props) {\n    const [state, dispatch] = React.useReducer(reducers, store);\n    const actions = {\n      setCurrentTab: e => {\n        dispatch({\n          type: 'setCurrentTab',\n          value: e\n        });\n      }\n    };\n    return __jsx(CurrentTabContext.Provider, {\n      value: {\n        state,\n        actions\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, props.children);\n  }\n\n  function useCurrentTab() {\n    let value = React.useContext(CurrentTabContext);\n\n    if (!value) {\n      throw new Error('Component must be wrapped with <CurrentTabProvider>');\n    }\n\n    return value;\n  }\n\n  return {\n    CurrentTabProvider,\n    useCurrentTab\n  };\n}\nconst {\n  CurrentTabProvider,\n  useCurrentTab\n} = createCurrentTab();\nexport { CurrentTabProvider, useCurrentTab };","map":{"version":3,"sources":["/Users/tomokokawase/Desktop/Portfolio/utils/hooks/useCurrentTab.tsx"],"names":["React","store","currentTab","test","count","state","action","type","value","combineReducers","reducers","map","k","reduce","acc","cur","createCurrentTab","CurrentTabContext","createContext","CurrentTabProvider","props","dispatch","useReducer","actions","setCurrentTab","e","children","useCurrentTab","useContext","Error"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AAGA,MAAMC,KAAK,GAAG;AACZC,EAAAA,UAAU,EAAE;AACVA,IAAAA,UAAU,EAAE;AADF,GADA;AAIZC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH;AAJM,CAAd;;AASA,MAAMF,UAAU,GAAG,CAACG,KAAD,EAAQC,MAAR,KAAmB;AACpC,MAAIA,MAAM,CAACC,IAAP,KAAgB,eAApB,EAAqC;AACnC,6BAAYF,KAAZ;AAAmBH,MAAAA,UAAU,EAAEI,MAAM,CAACE;AAAtC;AACD,GAFD,MAEO;AACL,WAAOH,KAAP;AACD;AACF,CAND;;AAQA,MAAMF,IAAI,GAAG,CAACE,KAAD,EAAQC,MAAR,KAAmB;AAC9B,MAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,6BAAYF,KAAZ;AAAmBD,MAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,GAAcE,MAAM,CAACE;AAA/C;AACD,GAFD,MAEO;AACL,WAAOH,KAAP;AACD;AACF,CAND,C,CAQA;AACA;AACA;AACA;;;AACA,MAAMI,eAAe,GAAGC,QAAQ,IAAI,CAACL,KAAD,EAAQC,MAAR,KAClC,aAAYI,QAAZ,EACE;AACA;AAFF,CAGGC,GAHH,CAGOC,CAAC,KAAK;AAAE,GAACA,CAAD,GAAKF,QAAQ,CAACE,CAAD,CAAR,CAAYP,KAAK,CAACO,CAAD,CAAjB,EAAsBN,MAAtB;AAAP,CAAL,CAHR,EAIE;AAJF,CAKGO,MALH,CAKU,CAACC,GAAD,EAAMC,GAAN,KAAc,eAAc,EAAd,EAAkBD,GAAlB,EAAuBC,GAAvB,CALxB,CADF;;AAQA,MAAML,QAAQ,GAAGD,eAAe,CAAC;AAAEP,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,CAAhC;AAEA,OAAO,SAASa,gBAAT,GAA4B;AACjC,QAAMC,iBAAiB,GAAGjB,KAAK,CAACkB,aAAN,CAGvB,IAHuB,CAA1B;;AAIA,WAASC,kBAAT,CAA4BC,KAA5B,EAAsD;AACpD,UAAM,CAACf,KAAD,EAAQgB,QAAR,IAAoBrB,KAAK,CAACsB,UAAN,CAAiBZ,QAAjB,EAA2BT,KAA3B,CAA1B;AACA,UAAMsB,OAAO,GAAG;AACdC,MAAAA,aAAa,EAAEC,CAAC,IAAI;AAClBJ,QAAAA,QAAQ,CAAC;AAAEd,UAAAA,IAAI,EAAE,eAAR;AAAyBC,UAAAA,KAAK,EAAEiB;AAAhC,SAAD,CAAR;AACD;AAHa,KAAhB;AAKA,WACE,MAAC,iBAAD,CAAmB,QAAnB;AACE,MAAA,KAAK,EAAE;AACLpB,QAAAA,KADK;AAELkB,QAAAA;AAFK,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGH,KAAK,CAACM,QANT,CADF;AAUD;;AACD,WAASC,aAAT,GAAyB;AACvB,QAAInB,KAAK,GAAGR,KAAK,CAAC4B,UAAN,CAAiBX,iBAAjB,CAAZ;;AACA,QAAI,CAACT,KAAL,EAAY;AACV,YAAM,IAAIqB,KAAJ,CAAU,qDAAV,CAAN;AACD;;AACD,WAAOrB,KAAP;AACD;;AAED,SAAO;AAAEW,IAAAA,kBAAF;AAAsBQ,IAAAA;AAAtB,GAAP;AACD;AAED,MAAM;AAAER,EAAAA,kBAAF;AAAsBQ,EAAAA;AAAtB,IAAwCX,gBAAgB,EAA9D;AACA,SAASG,kBAAT,EAA6BQ,aAA7B","sourcesContent":["import React, { Context, useContext } from 'react';\nimport exp from 'constants';\n\nconst store = {\n  currentTab: {\n    currentTab: 0\n  },\n  test: {\n    count: 0\n  }\n};\n\nconst currentTab = (state, action) => {\n  if (action.type === 'setCurrentTab') {\n    return { ...state, currentTab: action.value };\n  } else {\n    return state;\n  }\n};\n\nconst test = (state, action) => {\n  if (action.type === 'increment') {\n    return { ...state, count: state.count + action.value };\n  } else {\n    return state;\n  }\n};\n\n// 自定义合并reducer函数\n// 根据reducer定义的名称，拿到state中的对应名称下的state\n// state 也是一个复合 state\n// 返回值依然是个函数\nconst combineReducers = reducers => (state, action) =>\n  Object.keys(reducers)\n    // 拿到的state只是属于自己的key的那部分\n    // 对每个reducer 都执行一次处理, 将结果存为新的state[key]\n    .map(k => ({ [k]: reducers[k](state[k], action) }))\n    // 整合出新state返回，看起来就像是一个reducer在干活\n    .reduce((acc, cur) => Object.assign({}, acc, cur));\n\nconst reducers = combineReducers({ currentTab, test });\n\nexport function createCurrentTab() {\n  const CurrentTabContext = React.createContext<{\n    state: { [key: string]: any };\n    actions: any;\n  }>(null);\n  function CurrentTabProvider(props: { children: any }) {\n    const [state, dispatch] = React.useReducer(reducers, store);\n    const actions = {\n      setCurrentTab: e => {\n        dispatch({ type: 'setCurrentTab', value: e });\n      }\n    };\n    return (\n      <CurrentTabContext.Provider\n        value={{\n          state,\n          actions\n        }}\n      >\n        {props.children}\n      </CurrentTabContext.Provider>\n    );\n  }\n  function useCurrentTab() {\n    let value = React.useContext(CurrentTabContext);\n    if (!value) {\n      throw new Error('Component must be wrapped with <CurrentTabProvider>');\n    }\n    return value;\n  }\n\n  return { CurrentTabProvider, useCurrentTab };\n}\n\nconst { CurrentTabProvider, useCurrentTab } = createCurrentTab();\nexport { CurrentTabProvider, useCurrentTab };\n"]},"metadata":{},"sourceType":"module"}