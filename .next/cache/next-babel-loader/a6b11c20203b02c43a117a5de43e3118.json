{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from 'react';\nimport styles from './index.less';\nimport LayoutHeader from '../components/LayoutHeader';\nimport Profile from '../components/Profile';\nimport { CurrentTabProvider, useCurrentTab } from '../utils/hooks/useCurrentTab';\nimport Projects from '../components/Projects';\nimport { ContentSwitcher } from '../components/ContentSwitcher';\nimport { useComponentDidMount } from '../utils/hooks/useComponentDidMount';\nimport { useEffect } from 'react';\nimport { useResizeCallback } from '../utils/hooks/useResizeCallback';\nvar DESIGN_WIDTH = 1920;\n\nvar InnerLayout = function InnerLayout() {\n  var _useCurrentTab = useCurrentTab(),\n      scale = _useCurrentTab.state.scale.scale,\n      setScale = _useCurrentTab.actions.setScale;\n\n  var fallBackReactive = function fallBackReactive() {\n    setScale(1);\n    var scale = Math.min(document.body.clientWidth / 1920, 1);\n    var metaEl = document.querySelector('meta[name=\"viewport\"]');\n\n    if (!metaEl) {\n      metaEl = document.createElement('meta');\n      metaEl.setAttribute('name', 'viewport');\n      metaEl.setAttribute('content', 'width=device-width, initial-scale=' + scale + ', maximum-scale=' + scale + ', minimum-scale=' + scale + ', user-scalable=no');\n      document.documentElement.firstElementChild.appendChild(metaEl);\n    } else {\n      metaEl.setAttribute('content', 'width=device-width, initial-scale=' + scale + ', maximum-scale=' + scale + ', minimum-scale=' + scale + ', user-scalable=no');\n    }\n\n    window.scrollTo({\n      top: 0\n    });\n  };\n\n  var _useComponentDidMount = useComponentDidMount(function () {\n    if (window.innerWidth >= 700) {\n      var _scale = Math.min(document.body.clientWidth / DESIGN_WIDTH, 1);\n\n      setScale(_scale);\n    } else {\n      fallBackReactive();\n    }\n\n    addCallback(function () {\n      var scale = Math.min(document.body.clientWidth / DESIGN_WIDTH, 1);\n      document.getElementsByTagName('html')[0].style.fontSize = \"\".concat(scale, \"px\");\n      window.scrollTo({\n        top: 0\n      });\n      setScale(scale);\n    });\n  }),\n      IsDone = _useComponentDidMount.IsDone;\n\n  useEffect(function () {\n    document.getElementsByTagName('html')[0].style.fontSize = \"\".concat(scale, \"px\");\n    window.scrollTo({\n      top: 0\n    });\n  }, [scale]);\n\n  var _useResizeCallback = useResizeCallback(fallBackReactive),\n      addCallback = _useResizeCallback.addCallback;\n\n  return IsDone ? __jsx(\"div\", {\n    className: styles.layout\n  }, __jsx(LayoutHeader, null), __jsx(ContentSwitcher, null, __jsx(React.Fragment, null, __jsx(Profile, null), __jsx(Projects, null))), __jsx(LayoutHeader, {\n    bodyStyle: {\n      marginTop: '138rem'\n    }\n  })) : null;\n};\n\nvar Layout = function Layout() {\n  return __jsx(CurrentTabProvider, null, __jsx(InnerLayout, null));\n};\n\nexport default Layout;","map":null,"metadata":{},"sourceType":"module"}