{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/tomokokawase/Desktop/Portfolio/components/LayoutHeader/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport styles from './index.module.less';\nimport { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { useCurrentTab } from '../../utils/hooks/useCurrentTab';\nconst MenuItems = [{\n  key: 'aboutMe',\n  label: 'About Me'\n}, {\n  key: 'projects',\n  label: 'Projects'\n}];\n/**\n * React-Hooks is much more powerful than you thought\n * @constructor\n */\n\nconst LayoutHeader = () => {\n  const {\n    CurrentTabContext\n  } = useCurrentTab();\n  const {\n    state: {\n      currentTab: {\n        currentTab\n      }\n    },\n    actions: {\n      setCurrentTab\n    }\n  } = useContext(CurrentTabContext); // 设置小圆点的位置\n\n  const {\n    0: firstLoaded,\n    1: setFirstLoaded\n  } = useState(false);\n  const {\n    0: dotX,\n    1: setDotX\n  } = useState(0);\n  const bodyWidth = useRef(null);\n\n  const _MenuItems = MenuItems.map(item => _objectSpread({}, item, {\n    ref: React.useRef()\n  }));\n\n  const menuItemClickHandler = useCallback(item => () => {\n    if (!firstLoaded) {\n      return;\n    }\n\n    const findIndex = _MenuItems.findIndex(m => {\n      return m.key === item.key;\n    });\n\n    if (!~findIndex) {\n      return;\n    }\n\n    const pageOffSetLeft = (bodyWidth.current - 1600) / 2;\n    const offsetLeft = item.ref.current.offsetLeft;\n    const offsetWidth = item.ref.current.offsetWidth;\n    setDotX(offsetLeft + offsetWidth / 2 - pageOffSetLeft - 8);\n    console.log(findIndex);\n    setCurrentTab(findIndex);\n  }, [bodyWidth, firstLoaded]); // 判断是否是第一次渲染\n\n  useEffect(() => {\n    if (!firstLoaded) {\n      setFirstLoaded(true);\n    }\n  }, []); // 根据不是第一次渲染，来模拟componentDidMount 拿document 对象\n\n  useEffect(() => {\n    if (firstLoaded) {\n      bodyWidth.current = document.getElementsByTagName('body')[0].offsetWidth;\n      menuItemClickHandler(_MenuItems[currentTab])();\n    }\n  }, [firstLoaded]);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, currentTab.toString()), __jsx(\"div\", {\n    className: styles['layout-menu-container'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, _MenuItems.map(item => __jsx(\"span\", {\n    key: item.key,\n    ref: item.ref,\n    className: styles['layout-menu-item'],\n    onClick: menuItemClickHandler(item),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, item.label))), __jsx(\"div\", {\n    className: styles['layout-slider'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: styles['layout-slider-dot'],\n    style: {\n      transform: `translate(${dotX}px, -8px)`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: styles['layout-slider-line'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })));\n};\n\nexport default LayoutHeader;","map":{"version":3,"sources":["/Users/tomokokawase/Desktop/Portfolio/components/LayoutHeader/index.tsx"],"names":["React","styles","useCallback","useContext","useEffect","useRef","useState","useCurrentTab","MenuItems","key","label","LayoutHeader","CurrentTabContext","state","currentTab","actions","setCurrentTab","firstLoaded","setFirstLoaded","dotX","setDotX","bodyWidth","_MenuItems","map","item","ref","menuItemClickHandler","findIndex","m","pageOffSetLeft","current","offsetLeft","offsetWidth","console","log","document","getElementsByTagName","toString","transform"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from './index.module.less';\nimport { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { useCurrentTab } from '../../utils/hooks/useCurrentTab';\n\ninterface MenuItem {\n  key: string;\n  label: string;\n}\n\nconst MenuItems: MenuItem[] = [\n  {\n    key: 'aboutMe',\n    label: 'About Me'\n  },\n  {\n    key: 'projects',\n    label: 'Projects'\n  }\n];\n\n/**\n * React-Hooks is much more powerful than you thought\n * @constructor\n */\nconst LayoutHeader: React.FC<{}> = () => {\n  const { CurrentTabContext } = useCurrentTab();\n  const {\n    state: {\n      currentTab: { currentTab }\n    },\n    actions: { setCurrentTab }\n  } = useContext(CurrentTabContext);\n  // 设置小圆点的位置\n  const [firstLoaded, setFirstLoaded] = useState(false);\n  const [dotX, setDotX] = useState(0);\n  const bodyWidth = useRef(null);\n  const _MenuItems = MenuItems.map(item => ({\n    ...item,\n    ref: React.useRef()\n  }));\n  const menuItemClickHandler = useCallback(\n    item => () => {\n      if (!firstLoaded) {\n        return;\n      }\n      const findIndex = _MenuItems.findIndex(m => {\n        return m.key === item.key;\n      });\n      if (!~findIndex) {\n        return;\n      }\n      const pageOffSetLeft = (bodyWidth.current - 1600) / 2;\n      const offsetLeft = item.ref.current.offsetLeft;\n      const offsetWidth = item.ref.current.offsetWidth;\n      setDotX(offsetLeft + offsetWidth / 2 - pageOffSetLeft - 8);\n      console.log(findIndex);\n      setCurrentTab(findIndex);\n    },\n    [bodyWidth, firstLoaded]\n  );\n  // 判断是否是第一次渲染\n  useEffect(() => {\n    if (!firstLoaded) {\n      setFirstLoaded(true);\n    }\n  }, []);\n  // 根据不是第一次渲染，来模拟componentDidMount 拿document 对象\n  useEffect(() => {\n    if (firstLoaded) {\n      bodyWidth.current = document.getElementsByTagName('body')[0].offsetWidth;\n      menuItemClickHandler(_MenuItems[currentTab])();\n    }\n  }, [firstLoaded]);\n  return (\n    <div>\n      <h1>{currentTab.toString()}</h1>\n      <div className={styles['layout-menu-container']}>\n        {_MenuItems.map(item => (\n          <span\n            key={item.key}\n            ref={item.ref}\n            className={styles['layout-menu-item']}\n            onClick={menuItemClickHandler(item)}\n          >\n            {item.label}\n          </span>\n        ))}\n      </div>\n      <div className={styles['layout-slider']}>\n        <span\n          className={styles['layout-slider-dot']}\n          style={{\n            transform: `translate(${dotX}px, -8px)`\n          }}\n        />\n        <div className={styles['layout-slider-line']} />\n      </div>\n    </div>\n  );\n};\n\nexport default LayoutHeader;\n"]},"metadata":{},"sourceType":"module"}