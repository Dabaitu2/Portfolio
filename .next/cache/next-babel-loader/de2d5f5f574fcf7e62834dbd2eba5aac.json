{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nvar store = {\n  currentTab: 0\n};\n\nvar currentTab = function currentTab(state, action) {\n  if (action.type === 'setCurrentTab') {\n    return _objectSpread({}, state, {\n      currentTab: action.value\n    });\n  } else {\n    throw new Error();\n  }\n}; // 自定义合并reducer函数\n\n\nvar combineReducers = function combineReducers(reducers) {\n  return function (state, action) {\n    return _Object$keys(reducers).map(function (k) {\n      return _defineProperty({}, k, reducers[k](state[k], action));\n    }).reduce(function (acc, cur) {\n      return _Object$assign({}, acc, cur);\n    });\n  };\n};\n\nvar reducers = combineReducers({\n  currentTab: currentTab\n});\nexport var useCurrentTab = function useCurrentTab() {\n  var _React$useReducer = React.useReducer(reducers, store),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      _state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var _actions = {\n    setCurrentTab: function setCurrentTab(e) {\n      dispatch({\n        type: 'setCurrentTab',\n        value: e\n      });\n    }\n  }; // 创建Context放在最上层父组件\n\n  var CurrentTabContext = React.createContext({\n    state: _state,\n    actions: _actions\n  });\n\n  var _React$useContext = React.useContext(CurrentTabContext),\n      state = _React$useContext.state,\n      actions = _React$useContext.actions;\n\n  return {\n    state: state,\n    actions: actions,\n    CurrentTabContext: CurrentTabContext\n  };\n};","map":{"version":3,"sources":["/Users/tomokokawase/Desktop/Portfolio/utils/hooks/useCurrentTab.ts"],"names":["React","store","currentTab","state","action","type","value","Error","combineReducers","reducers","map","k","reduce","acc","cur","useCurrentTab","useReducer","_state","dispatch","_actions","setCurrentTab","e","CurrentTabContext","createContext","actions","useContext"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,KAAK,GAAG;AAAEC,EAAAA,UAAU,EAAE;AAAd,CAAd;;AAEA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACpC,MAAIA,MAAM,CAACC,IAAP,KAAgB,eAApB,EAAqC;AACnC,6BAAYF,KAAZ;AAAmBD,MAAAA,UAAU,EAAEE,MAAM,CAACE;AAAtC;AACD,GAFD,MAEO;AACL,UAAM,IAAIC,KAAJ,EAAN;AACD;AACF,CAND,C,CAQA;;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,QAAQ,EAAI;AAClC,SAAO,UAASN,KAAT,EAAgBC,MAAhB,EAAwB;AAC7B,WAAO,aAAYK,QAAZ,EACJC,GADI,CACA,UAAAC,CAAC;AAAA,iCAAQA,CAAR,EAAYF,QAAQ,CAACE,CAAD,CAAR,CAAYR,KAAK,CAACQ,CAAD,CAAjB,EAAsBP,MAAtB,CAAZ;AAAA,KADD,EAEJQ,MAFI,CAEG,UAACC,GAAD,EAAMC,GAAN;AAAA,aAAc,eAAc,EAAd,EAAkBD,GAAlB,EAAuBC,GAAvB,CAAd;AAAA,KAFH,CAAP;AAGD,GAJD;AAKD,CAND;;AAQA,IAAML,QAAQ,GAAGD,eAAe,CAAC;AAAEN,EAAAA,UAAU,EAAVA;AAAF,CAAD,CAAhC;AAEA,OAAO,IAAMa,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA,0BACNf,KAAK,CAACgB,UAAN,CAAiBP,QAAjB,EAA2BR,KAA3B,CADM;AAAA;AAAA,MAC1BgB,MAD0B;AAAA,MAClBC,QADkB;;AAEjC,MAAMC,QAAQ,GAAG;AACfC,IAAAA,aAAa,EAAE,uBAAAC,CAAC,EAAI;AAClBH,MAAAA,QAAQ,CAAC;AAAEb,QAAAA,IAAI,EAAE,eAAR;AAAyBC,QAAAA,KAAK,EAAEe;AAAhC,OAAD,CAAR;AACD;AAHc,GAAjB,CAFiC,CAOjC;;AACA,MAAMC,iBAAiB,GAAGtB,KAAK,CAACuB,aAAN,CAGvB;AAAEpB,IAAAA,KAAK,EAAEc,MAAT;AAAiBO,IAAAA,OAAO,EAAEL;AAA1B,GAHuB,CAA1B;;AARiC,0BAYNnB,KAAK,CAACyB,UAAN,CAAiBH,iBAAjB,CAZM;AAAA,MAYzBnB,KAZyB,qBAYzBA,KAZyB;AAAA,MAYlBqB,OAZkB,qBAYlBA,OAZkB;;AAcjC,SAAO;AAAErB,IAAAA,KAAK,EAALA,KAAF;AAASqB,IAAAA,OAAO,EAAPA,OAAT;AAAkBF,IAAAA,iBAAiB,EAAjBA;AAAlB,GAAP;AACD,CAfM","sourcesContent":["import React from 'react';\n\nconst store = { currentTab: 0 };\n\nconst currentTab = (state, action) => {\n  if (action.type === 'setCurrentTab') {\n    return { ...state, currentTab: action.value };\n  } else {\n    throw new Error();\n  }\n};\n\n// 自定义合并reducer函数\nconst combineReducers = reducers => {\n  return function(state, action) {\n    return Object.keys(reducers)\n      .map(k => ({ [k]: reducers[k](state[k], action) }))\n      .reduce((acc, cur) => Object.assign({}, acc, cur));\n  };\n};\n\nconst reducers = combineReducers({ currentTab });\n\nexport const useCurrentTab = () => {\n  const [_state, dispatch] = React.useReducer(reducers, store);\n  const _actions = {\n    setCurrentTab: e => {\n      dispatch({ type: 'setCurrentTab', value: e });\n    }\n  };\n  // 创建Context放在最上层父组件\n  const CurrentTabContext = React.createContext<{\n    state: { [key: string]: any };\n    actions: typeof _actions;\n  }>({ state: _state, actions: _actions });\n  const { state, actions } = React.useContext(CurrentTabContext);\n\n  return { state, actions, CurrentTabContext };\n};\n"]},"metadata":{},"sourceType":"module"}