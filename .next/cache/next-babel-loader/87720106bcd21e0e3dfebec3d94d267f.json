{"ast":null,"code":"var _jsxFileName = \"/Users/tomokokawase/Desktop/Portfolio/components/Projects/AutoBackGroundColorSliderPage/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useComponentDidMount } from '../../../utils/hooks/useComponentDidMount';\nimport analyze from 'rgbaster';\n\nvar AutoBackGroundColorSliderPage = function AutoBackGroundColorSliderPage(props) {\n  var src = props.src,\n      alt = props.alt;\n\n  var _useState = useState('#ffffff'),\n      backgroundColor = _useState[0],\n      setBackGroundColor = _useState[1];\n\n  useComponentDidMount(function () {\n    var img = new Image();\n    img.src = src;\n\n    img.onload = function () {\n      analyze(src).then(function (value) {\n        if (value[0]) {\n          setBackGroundColor(value[0].color);\n        }\n      })[\"catch\"](function (err) {\n        return null;\n      });\n    };\n  });\n  return __jsx(\"div\", {\n    className: 'section',\n    style: {\n      backgroundColor: backgroundColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: src,\n    alt: alt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n};\n\nexport default AutoBackGroundColorSliderPage;","map":{"version":3,"sources":["/Users/tomokokawase/Desktop/Portfolio/components/Projects/AutoBackGroundColorSliderPage/index.tsx"],"names":["React","useState","useComponentDidMount","analyze","AutoBackGroundColorSliderPage","props","src","alt","backgroundColor","setBackGroundColor","img","Image","onload","then","value","color","err"],"mappings":";;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,oBAAT,QAAqC,2CAArC;AACA,OAAOC,OAAP,MAAoB,UAApB;;AAOA,IAAMC,6BAAyC,GAAG,SAA5CA,6BAA4C,CAACC,KAAD,EAAmB;AAAA,MAC3DC,GAD2D,GAC9CD,KAD8C,CAC3DC,GAD2D;AAAA,MACtDC,GADsD,GAC9CF,KAD8C,CACtDE,GADsD;;AAAA,kBAErBN,QAAQ,CAAC,SAAD,CAFa;AAAA,MAE5DO,eAF4D;AAAA,MAE3CC,kBAF2C;;AAGnEP,EAAAA,oBAAoB,CAAC,YAAM;AACzB,QAAMQ,GAAG,GAAG,IAAIC,KAAJ,EAAZ;AACAD,IAAAA,GAAG,CAACJ,GAAJ,GAAUA,GAAV;;AACAI,IAAAA,GAAG,CAACE,MAAJ,GAAa,YAAM;AACjBT,MAAAA,OAAO,CAACG,GAAD,CAAP,CACGO,IADH,CACQ,UAAAC,KAAK,EAAI;AACb,YAAIA,KAAK,CAAC,CAAD,CAAT,EAAc;AACZL,UAAAA,kBAAkB,CAACK,KAAK,CAAC,CAAD,CAAL,CAASC,KAAV,CAAlB;AACD;AACF,OALH,WAMS,UAAAC,GAAG;AAAA,eAAI,IAAJ;AAAA,OANZ;AAOD,KARD;AASD,GAZmB,CAApB;AAaA,SACE;AACE,IAAA,SAAS,EAAE,SADb;AAEE,IAAA,KAAK,EAAE;AACLR,MAAAA,eAAe,EAAEA;AADZ,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,IAAA,GAAG,EAAEF,GAAV;AAAe,IAAA,GAAG,EAAEC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD,CA1BD;;AA4BA,eAAeH,6BAAf","sourcesContent":["import React, { FC, useState } from 'react';\nimport { useComponentDidMount } from '../../../utils/hooks/useComponentDidMount';\nimport analyze from 'rgbaster';\n\ninterface IProps {\n  src: string;\n  alt: string;\n}\n\nconst AutoBackGroundColorSliderPage: FC<IProps> = (props: IProps) => {\n  const { src, alt } = props;\n  const [backgroundColor, setBackGroundColor] = useState('#ffffff');\n  useComponentDidMount(() => {\n    const img = new Image();\n    img.src = src;\n    img.onload = () => {\n      analyze(src)\n        .then(value => {\n          if (value[0]) {\n            setBackGroundColor(value[0].color);\n          }\n        })\n        .catch(err => null);\n    };\n  });\n  return (\n    <div\n      className={'section'}\n      style={{\n        backgroundColor: backgroundColor\n      }}\n    >\n      <img src={src} alt={alt} />\n    </div>\n  );\n};\n\nexport default AutoBackGroundColorSliderPage;\n"]},"metadata":{},"sourceType":"module"}