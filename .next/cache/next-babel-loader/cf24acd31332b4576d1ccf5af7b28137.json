{"ast":null,"code":"var _jsxFileName = \"/Users/tomokokawase/Desktop/Portfolio/components/common/LazyLoadImg/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\n\nconst LazyLoadImg = props => {\n  const {\n    className,\n    src,\n    sources,\n    alt,\n    preview_src\n  } = props;\n  const {\n    0: isDone,\n    1: setIsDone\n  } = useState(false);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: preview_src,\n    alt: 'preview',\n    className: className,\n    style: {\n      display: isDone ? 'none' : 'show'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), __jsx(\"picture\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, sources.map(s => __jsx(\"source\", {\n    srcSet: s.src,\n    type: s.type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), __jsx(\"img\", {\n    src: src,\n    alt: alt,\n    className: className,\n    style: {\n      display: isDone ? 'initial' : 'none'\n    },\n    onLoad: () => {\n      setIsDone(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })));\n};\n\nexport default LazyLoadImg;","map":{"version":3,"sources":["/Users/tomokokawase/Desktop/Portfolio/components/common/LazyLoadImg/index.tsx"],"names":["React","useState","LazyLoadImg","props","className","src","sources","alt","preview_src","isDone","setIsDone","display","map","s","type"],"mappings":";;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;;AAcA,MAAMC,WAAuB,GAAIC,KAAD,IAAmB;AACjD,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,GAAb;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA,GAA3B;AAAgCC,IAAAA;AAAhC,MAAgDL,KAAtD;AACA,QAAM;AAAA,OAACM,MAAD;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC,KAAD,CAApC;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAEO,WADP;AAEE,IAAA,GAAG,EAAE,SAFP;AAGE,IAAA,SAAS,EAAEJ,SAHb;AAIE,IAAA,KAAK,EAAE;AACLO,MAAAA,OAAO,EAAEF,MAAM,GAAG,MAAH,GAAY;AADtB,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OAAO,CAACM,GAAR,CAAYC,CAAC,IACZ;AAAQ,IAAA,MAAM,EAAEA,CAAC,CAACR,GAAlB;AAAuB,IAAA,IAAI,EAAEQ,CAAC,CAACC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,EAIE;AACE,IAAA,GAAG,EAAET,GADP;AAEE,IAAA,GAAG,EAAEE,GAFP;AAGE,IAAA,SAAS,EAAEH,SAHb;AAIE,IAAA,KAAK,EAAE;AACLO,MAAAA,OAAO,EAAEF,MAAM,GAAG,SAAH,GAAe;AADzB,KAJT;AAOE,IAAA,MAAM,EAAE,MAAM;AACZC,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CATF,CADF;AA4BD,CAhCD;;AAkCA,eAAeR,WAAf","sourcesContent":["import React, { FC, useState } from 'react';\n\nexport interface ISources {\n  src: string;\n  type: string;\n}\ninterface IProps {\n  sources: ISources[];\n  src: string;\n  preview_src: string;\n  alt?: string;\n  className?: string;\n}\n\nconst LazyLoadImg: FC<IProps> = (props: IProps) => {\n  const { className, src, sources, alt, preview_src } = props;\n  const [isDone, setIsDone] = useState(false);\n\n  return (\n    <div>\n      <img\n        src={preview_src}\n        alt={'preview'}\n        className={className}\n        style={{\n          display: isDone ? 'none' : 'show',\n        }}\n      />\n      <picture>\n        {sources.map(s => (\n          <source srcSet={s.src} type={s.type} />\n        ))}\n        <img\n          src={src}\n          alt={alt}\n          className={className}\n          style={{\n            display: isDone ? 'initial' : 'none'\n          }}\n          onLoad={() => {\n            setIsDone(true);\n          }}\n        />\n      </picture>\n    </div>\n  );\n};\n\nexport default LazyLoadImg;\n"]},"metadata":{},"sourceType":"module"}