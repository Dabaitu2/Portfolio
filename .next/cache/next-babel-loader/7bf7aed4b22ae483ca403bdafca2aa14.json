{"ast":null,"code":"var _jsxFileName = \"/Users/tomokokawase/Desktop/Portfolio/components/Projects/ProjectDetail/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect } from 'react';\nimport styles from './index.module.less';\nimport LazyLoadImg from '../../common/LazyLoadImg';\nimport { useResizeCallback } from '../../../utils/hooks/useResizeCallback';\nimport { useForceUpdate } from '../../../utils/hooks/useForceUpdate';\nimport { useDeepCompareEffect } from '../../../utils/hooks/useDeepCompareEffect';\nexport const ProjectDetailItem = props => {\n  const {\n    images,\n    title,\n    desc,\n    tags,\n    details,\n    mainColor,\n    detail_images_meta,\n    video,\n    affix_image_meta\n  } = props;\n  const videoRef = React.useRef(null);\n  const [played, setPlayed] = React.useState(undefined);\n  const {\n    forceUpdate\n  } = useForceUpdate();\n  const [progress, setProgress] = React.useState(0);\n  useEffect(() => {\n    if (videoRef.current !== null && document) {\n      document.onscroll = () => {\n        if (videoRef.current.getBoundingClientRect().top < 700) {\n          if (played === undefined) {\n            videoRef.current.play();\n            setPlayed(true);\n          }\n        } else if (videoRef.current.getBoundingClientRect().bottom < 150) {\n          videoRef.current.pause();\n          setPlayed(false);\n        }\n      };\n    }\n  }, [videoRef.current, document, played]);\n  const {\n    addMustExecuteCallback\n  } = useResizeCallback();\n  addMustExecuteCallback(() => {\n    forceUpdate();\n  });\n  useDeepCompareEffect(() => {\n    const handleTimeUpdate = () => {\n      setProgress(Math.floor(videoRef.current.currentTime / videoRef.current.duration) * 100);\n    };\n\n    if (videoRef.current) {\n      videoRef.current.addEventListener('timeupdate', handleTimeUpdate);\n    }\n  }, [videoRef.current]);\n  return __jsx(\"div\", {\n    className: styles['project-detail-item'],\n    style: {\n      color: mainColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: styles['project-detail-images'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, images.map(image => __jsx(LazyLoadImg, _extends({}, image, {\n    className: styles['project-detail-image'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })))), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: styles['project-detail-title'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, title), __jsx(\"div\", {\n    className: styles['project-detail-subtitle'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, desc.map(d => __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, d)))), __jsx(\"div\", {\n    className: styles['project-detail-details'],\n    style: {\n      backgroundColor: mainColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: styles['project-detail-tags'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, tags.map(t => __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, t))), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, details)), __jsx(\"div\", {\n    style: {\n      fontSize: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, Array.from({\n    length: detail_images_meta.num\n  }).map((_, i) => {\n    if (i === 0) {\n      return;\n    }\n\n    const common_file = detail_images_meta.dir + '/' + (i + 1).toString();\n    return __jsx(LazyLoadImg, {\n      src: common_file + '.jpg',\n      sources: [{\n        type: 'image/webp',\n        src: common_file + '.webp'\n      }],\n      preview_src: common_file + '-preview.jpg',\n      preview_sources: [{\n        type: 'image/webp',\n        src: common_file + '-preview.webp'\n      }],\n      className: styles['project-detail-details-images'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    });\n  }), video ? video.map(v => {\n    return __jsx(\"div\", {\n      style: {\n        width: '1600rem',\n        position: 'relative',\n        height: '900rem',\n        transition: '0.3s ease-in-out',\n        filter: played == true ? 'none' : 'opacity(0.9)'\n      },\n      onClick: () => {\n        if (played) {\n          videoRef.current.pause();\n          setPlayed(false);\n        } else {\n          videoRef.current.play();\n          setPlayed(true);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: styles['project-detail-stop-icon'],\n      style: {\n        display: played == true ? 'none' : 'block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"PAUSE\"), __jsx(\"div\", {\n      className: styles['project-detail-video-control-bar'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: styles['bar'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: styles['progress'],\n      style: {\n        width: progress + '%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }))), __jsx(\"video\", {\n      src: v.src,\n      ref: videoRef,\n      autoPlay: false,\n      style: {\n        width: '1600rem',\n        float: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }));\n  }) : null, affix_image_meta ? Array.from({\n    length: affix_image_meta.num\n  }).map((_, i) => {\n    if (i === 0) {\n      return;\n    }\n\n    const common_file = affix_image_meta.dir + '/' + (detail_images_meta.num + i + 1).toString();\n    return __jsx(LazyLoadImg, {\n      src: common_file + '.jpg',\n      sources: [{\n        type: 'image/webp',\n        src: common_file + '.webp'\n      }],\n      preview_src: common_file + '-preview.jpg',\n      preview_sources: [{\n        type: 'image/webp',\n        src: common_file + '-preview.webp'\n      }],\n      className: styles['project-detail-details-images'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    });\n  }) : null));\n};\nexport default ProjectDetailItem;","map":{"version":3,"sources":["/Users/tomokokawase/Desktop/Portfolio/components/Projects/ProjectDetail/index.tsx"],"names":["React","useEffect","styles","LazyLoadImg","useResizeCallback","useForceUpdate","useDeepCompareEffect","ProjectDetailItem","props","images","title","desc","tags","details","mainColor","detail_images_meta","video","affix_image_meta","videoRef","useRef","played","setPlayed","useState","undefined","forceUpdate","progress","setProgress","current","document","onscroll","getBoundingClientRect","top","play","bottom","pause","addMustExecuteCallback","handleTimeUpdate","Math","floor","currentTime","duration","addEventListener","color","map","image","d","backgroundColor","t","fontSize","Array","from","length","num","_","i","common_file","dir","toString","type","src","v","width","position","height","transition","filter","display","float"],"mappings":"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","sourcesContent":["import React, { FC, useEffect } from 'react';\nimport styles from './index.module.less';\nimport LazyLoadImg, { LazyLoadImgProps } from '../../common/LazyLoadImg';\nimport { useResizeCallback } from '../../../utils/hooks/useResizeCallback';\nimport { useForceUpdate } from '../../../utils/hooks/useForceUpdate';\nimport { useDeepCompareEffect } from '../../../utils/hooks/useDeepCompareEffect';\n\nexport interface ProjectDetailInfoProps {\n  images: LazyLoadImgProps[];\n  title: string;\n  desc: string[];\n  tags: string[];\n  details: string;\n  mainColor: string;\n  detail_images_meta: {\n    dir: string;\n    num: number;\n  };\n  video?: [\n    {\n      src: string;\n    }\n  ];\n  affix_image_meta?: {\n    dir: string;\n    num: number;\n  };\n}\n\ntype IProps = ProjectDetailInfoProps;\n\nexport const ProjectDetailItem: FC<IProps> = (props: IProps) => {\n  const {\n    images,\n    title,\n    desc,\n    tags,\n    details,\n    mainColor,\n    detail_images_meta,\n    video,\n    affix_image_meta\n  } = props;\n  const videoRef = React.useRef<any>(null);\n  const [played, setPlayed] = React.useState<boolean | undefined>(undefined);\n  const { forceUpdate } = useForceUpdate();\n  const [progress, setProgress] = React.useState<number>(0);\n  useEffect(() => {\n    if (videoRef.current !== null && document) {\n      document.onscroll = () => {\n        if (videoRef.current!.getBoundingClientRect().top < 700) {\n          if (played === undefined) {\n            videoRef.current.play();\n            setPlayed(true);\n          }\n        } else if (videoRef.current!.getBoundingClientRect().bottom < 150) {\n          videoRef.current.pause();\n          setPlayed(false);\n        }\n      };\n    }\n  }, [videoRef.current, document, played]);\n  const { addMustExecuteCallback } = useResizeCallback();\n  addMustExecuteCallback(() => {\n    forceUpdate();\n  });\n  useDeepCompareEffect(() => {\n    const handleTimeUpdate = () => {\n      setProgress(\n        Math.floor(videoRef.current.currentTime / videoRef.current.duration) *\n          100\n      );\n    };\n    if (videoRef.current) {\n      videoRef.current.addEventListener('timeupdate', handleTimeUpdate);\n    }\n  }, [videoRef.current]);\n  return (\n    <div\n      className={styles['project-detail-item']}\n      style={{\n        color: mainColor\n      }}\n    >\n      <div className={styles['project-detail-images']}>\n        {images.map(image => (\n          <LazyLoadImg {...image} className={styles['project-detail-image']} />\n        ))}\n      </div>\n      <div>\n        <div className={styles['project-detail-title']}>{title}</div>\n        <div className={styles['project-detail-subtitle']}>\n          {desc.map(d => (\n            <span>{d}</span>\n          ))}\n        </div>\n      </div>\n      <div\n        className={styles['project-detail-details']}\n        style={{\n          backgroundColor: mainColor\n        }}\n      >\n        <div className={styles['project-detail-tags']}>\n          {tags.map(t => (\n            <span>{t}</span>\n          ))}\n        </div>\n        <span>{details}</span>\n      </div>\n      <div\n        style={{\n          fontSize: 0\n        }}\n      >\n        {Array.from({ length: detail_images_meta.num }).map((_, i) => {\n          if (i === 0) {\n            return;\n          }\n          const common_file = detail_images_meta.dir + '/' + (i + 1).toString();\n          return (\n            <LazyLoadImg\n              src={common_file + '.jpg'}\n              sources={[\n                {\n                  type: 'image/webp',\n                  src: common_file + '.webp'\n                }\n              ]}\n              preview_src={common_file + '-preview.jpg'}\n              preview_sources={[\n                { type: 'image/webp', src: common_file + '-preview.webp' }\n              ]}\n              className={styles['project-detail-details-images']}\n            />\n          );\n        })}\n        {video\n          ? video.map(v => {\n              return (\n                <div\n                  style={{\n                    width: '1600rem',\n                    position: 'relative',\n                    height: '900rem',\n                    transition: '0.3s ease-in-out',\n                    filter: played == true ? 'none' : 'opacity(0.9)'\n                  }}\n                  onClick={() => {\n                    if (played) {\n                      videoRef.current.pause();\n                      setPlayed(false);\n                    } else {\n                      videoRef.current.play();\n                      setPlayed(true);\n                    }\n                  }}\n                >\n                  <div\n                    className={styles['project-detail-stop-icon']}\n                    style={{\n                      display: played == true ? 'none' : 'block'\n                    }}\n                  >\n                    PAUSE\n                  </div>\n                  <div className={styles['project-detail-video-control-bar']}>\n                    <div className={styles['bar']}>\n                      <div\n                        className={styles['progress']}\n                        style={{\n                          width: progress + '%'\n                        }}\n                      />\n                    </div>\n                  </div>\n                  <video\n                    src={v.src}\n                    ref={videoRef}\n                    autoPlay={false}\n                    style={{\n                      width: '1600rem',\n                      float: 'left'\n                    }}\n                  />\n                </div>\n              );\n            })\n          : null}\n        {affix_image_meta\n          ? Array.from({ length: affix_image_meta.num }).map((_, i) => {\n              if (i === 0) {\n                return;\n              }\n              const common_file =\n                affix_image_meta.dir +\n                '/' +\n                (detail_images_meta.num + i + 1).toString();\n              return (\n                <LazyLoadImg\n                  src={common_file + '.jpg'}\n                  sources={[\n                    {\n                      type: 'image/webp',\n                      src: common_file + '.webp'\n                    }\n                  ]}\n                  preview_src={common_file + '-preview.jpg'}\n                  preview_sources={[\n                    { type: 'image/webp', src: common_file + '-preview.webp' }\n                  ]}\n                  className={styles['project-detail-details-images']}\n                />\n              );\n            })\n          : null}\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectDetailItem;\n"]},"metadata":{},"sourceType":"module"}