{"ast":null,"code":"import { useState } from 'react';\nexport var useForceUpdate = function useForceUpdate(fallBackHandler) {\n  var _useState = useState(true),\n      _ = _useState[0],\n      setUpdate = _useState[1];\n\n  var forceUpdate = function forceUpdate() {\n    setUpdate(!_);\n  };\n\n  return {\n    forceUpdate: forceUpdate\n  };\n};","map":{"version":3,"sources":["/Users/tomokokawase/Desktop/Portfolio/utils/hooks/useForceUpdate.ts"],"names":["useState","useForceUpdate","fallBackHandler","_","setUpdate","forceUpdate"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,eAAD,EAAiC;AAAA,kBACtCF,QAAQ,CAAC,IAAD,CAD8B;AAAA,MACtDG,CADsD;AAAA,MACnDC,SADmD;;AAE7D,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBD,IAAAA,SAAS,CAAC,CAACD,CAAF,CAAT;AACD,GAFD;;AAGA,SAAO;AAAEE,IAAAA,WAAW,EAAXA;AAAF,GAAP;AACD,CANM","sourcesContent":["import { useState } from 'react';\n\nexport const useForceUpdate = (fallBackHandler?: () => any) => {\n  const [_, setUpdate] = useState(true);\n  const forceUpdate = () => {\n    setUpdate(!_);\n  };\n  return { forceUpdate };\n};\n"]},"metadata":{},"sourceType":"module"}