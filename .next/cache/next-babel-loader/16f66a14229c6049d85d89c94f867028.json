{"ast":null,"code":"var _jsxFileName = \"/Users/tomokokawase/Desktop/Portfolio/components/common/LazyLoadImg/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\n\nvar LazyLoadImg = function LazyLoadImg(props) {\n  var className = props.className,\n      src = props.src,\n      sources = props.sources,\n      alt = props.alt;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"picture\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, sources.map(function (s) {\n    return __jsx(\"source\", {\n      srcSet: s.src,\n      type: s.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n  }), __jsx(\"img\", {\n    src: src,\n    alt: alt,\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })));\n};\n\nexport default LazyLoadImg;","map":{"version":3,"sources":["/Users/tomokokawase/Desktop/Portfolio/components/common/LazyLoadImg/index.tsx"],"names":["React","LazyLoadImg","props","className","src","sources","alt","map","s","type"],"mappings":";;AAAA,OAAOA,KAAP,MAA0B,OAA1B;;AAaA,IAAMC,WAAuB,GAAG,SAA1BA,WAA0B,CAACC,KAAD,EAAmB;AAAA,MACzCC,SADyC,GACRD,KADQ,CACzCC,SADyC;AAAA,MAC9BC,GAD8B,GACRF,KADQ,CAC9BE,GAD8B;AAAA,MACzBC,OADyB,GACRH,KADQ,CACzBG,OADyB;AAAA,MAChBC,GADgB,GACRJ,KADQ,CAChBI,GADgB;AAEjD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,CAACE,GAAR,CAAY,UAAAC,CAAC;AAAA,WACZ;AAAQ,MAAA,MAAM,EAAEA,CAAC,CAACJ,GAAlB;AAAuB,MAAA,IAAI,EAAEI,CAAC,CAACC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADY;AAAA,GAAb,CADH,EAIE;AAAK,IAAA,GAAG,EAAEL,GAAV;AAAe,IAAA,GAAG,EAAEE,GAApB;AAAyB,IAAA,SAAS,EAAEH,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF;AAUD,CAZD;;AAcA,eAAeF,WAAf","sourcesContent":["import React, { FC } from 'react';\n\nexport interface ISources {\n  src: string;\n  type: string;\n}\ninterface IProps {\n  sources: ISources[];\n  src: string;\n  alt?: string;\n  className?: string;\n}\n\nconst LazyLoadImg: FC<IProps> = (props: IProps) => {\n  const { className, src, sources, alt } = props;\n  return (\n    <div>\n      <picture>\n        {sources.map(s => (\n          <source srcSet={s.src} type={s.type} />\n        ))}\n        <img src={src} alt={alt} className={className} />\n      </picture>\n    </div>\n  );\n};\n\nexport default LazyLoadImg;\n"]},"metadata":{},"sourceType":"module"}