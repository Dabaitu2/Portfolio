{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/tomokokawase/Desktop/Portfolio/components/Projects/AutoBackGroundColorSliderPage/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useComponentDidMount } from '../../../utils/hooks/useComponentDidMount';\nimport analyze from 'rgbaster';\n\nvar AutoBackGroundColorSliderPage = function AutoBackGroundColorSliderPage(props) {\n  var src = props.src,\n      alt = props.alt;\n  useComponentDidMount(function () {\n    var img = new Image();\n    img.src = src;\n\n    img.onload = function _callee() {\n      var result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(analyze(src));\n\n            case 2:\n              result = _context.sent;\n              console.log(result);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n  });\n  return __jsx(\"div\", {\n    className: 'section',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: src,\n    alt: alt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n};\n\nexport default AutoBackGroundColorSliderPage;","map":{"version":3,"sources":["/Users/tomokokawase/Desktop/Portfolio/components/Projects/AutoBackGroundColorSliderPage/index.tsx"],"names":["React","useComponentDidMount","analyze","AutoBackGroundColorSliderPage","props","src","alt","img","Image","onload","result","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,oBAAT,QAAqC,2CAArC;AACA,OAAOC,OAAP,MAAoB,UAApB;;AAOA,IAAMC,6BAAyC,GAAG,SAA5CA,6BAA4C,CAACC,KAAD,EAAmB;AAAA,MAC3DC,GAD2D,GAC9CD,KAD8C,CAC3DC,GAD2D;AAAA,MACtDC,GADsD,GAC9CF,KAD8C,CACtDE,GADsD;AAEnEL,EAAAA,oBAAoB,CAAC,YAAM;AACzB,QAAMM,GAAG,GAAG,IAAIC,KAAJ,EAAZ;AACAD,IAAAA,GAAG,CAACF,GAAJ,GAAUA,GAAV;;AACAE,IAAAA,GAAG,CAACE,MAAJ,GAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACUP,OAAO,CAACG,GAAD,CADjB;;AAAA;AACLK,cAAAA,MADK;AAEXC,cAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAb;AAID,GAPmB,CAApB;AAQA,SACE;AAAK,IAAA,SAAS,EAAE,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEL,GAAV;AAAe,IAAA,GAAG,EAAEC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAfD;;AAkBA,eAAeH,6BAAf","sourcesContent":["import React, { FC } from 'react';\nimport { useComponentDidMount } from '../../../utils/hooks/useComponentDidMount';\nimport analyze from 'rgbaster';\n\ninterface IProps {\n  src: string;\n  alt: string;\n}\n\nconst AutoBackGroundColorSliderPage: FC<IProps> = (props: IProps) => {\n  const { src, alt } = props;\n  useComponentDidMount(() => {\n    const img = new Image();\n    img.src = src;\n    img.onload = async () => {\n      const result = await analyze(src);\n      console.log(result);\n    };\n  });\n  return (\n    <div className={'section'}>\n      <img src={src} alt={alt} />\n    </div>\n  );\n};\n\n\nexport default AutoBackGroundColorSliderPage;\n"]},"metadata":{},"sourceType":"module"}