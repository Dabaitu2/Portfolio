{"version":3,"file":"static/4ae0bce01368b32cc717.worker.js","sources":["webpack:///webpack/bootstrap","webpack:///./utils/workers/findMainTheme.worker.ts","webpack:///./utils/rgbaster/helper.ts","webpack:///./utils/rgbaster/index.ts"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./node_modules/next/dist/build/webpack/loaders/next-babel-loader.js?!./utils/workers/findMainTheme.worker.ts\");\n","// @ts-ignore\nimport { analyze } from '../rgbaster';\n\nonmessage = e => {\n  if (process.browser) {\n    const colors = analyze(e.data);\n    if (colors[0]) {\n       // @ts-ignore\n      postMessage(colors[0].color);\n    }\n  }\n};\n","export const getContext = (width, height) => {\n  const canvas = document.createElement('canvas');\n  canvas.setAttribute('width', width);\n  canvas.setAttribute('height', height);\n  return canvas.getContext('2d');\n};\n\nexport const getImageData = (\n  src: string,\n  scale: number = 1\n): Promise<Uint8ClampedArray> => {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = function() {\n      const width = img.width * scale;\n      const height = img.height * scale;\n      const context = getContext(width, height);\n      context.drawImage(img, 0, 0, width, height);\n\n      const { data } = context.getImageData(0, 0, width, height);\n      resolve(data);\n    };\n\n    const errorHandler = () =>\n      reject(new Error('An error occurred attempting to load image'));\n\n    img.onerror = errorHandler;\n    img.onabort = errorHandler;\n    img.src = src;\n  });\n};\n\nexport const getCounts = (data: Uint8ClampedArray, ignore: string[]): [] => {\n  const countMap = {};\n\n  for (let i = 0; i < data.length; i += 4 /* 4 gives us r, g, b, and a*/) {\n    let alpha: number = data[i + 3];\n    // skip FULLY transparent pixels\n    if (alpha === 0) continue;\n\n    let rgbComponents: number[] = Array.from(data.subarray(i, i + 3));\n\n    // skip undefined data\n    if (rgbComponents.indexOf(undefined) !== -1) continue;\n\n    let color: string =\n      alpha && alpha !== 255\n        ? `rgba(${[...rgbComponents, alpha].join(',')})`\n        : `rgb(${rgbComponents.join(',')})`;\n\n    // skip colors in the ignore list\n    if (ignore.indexOf(color) !== -1) continue;\n\n    if (countMap[color]) {\n      countMap[color].count++;\n    } else {\n      countMap[color] = { color, count: 1 };\n    }\n  }\n\n  const counts = Object.values(countMap) as [];\n  return counts.sort((a: any, b: any) => b.count - a.count);\n};\n","import { getCounts, getImageData } from './helper';\n\ninterface Opts {\n  ignore?: string[];\n  scale?: number;\n  skipTransparentPixels?: boolean;\n}\n\nconst defaultOpts: Opts = {\n  ignore: [],\n  scale: 1\n};\n\nexport default async function(\n  src: string,\n  opts: Opts = defaultOpts\n): Promise<Uint8ClampedArray> {\n  opts = { ...defaultOpts, ...opts };\n\n  const {\n    ignore, // for example, to ignore white and black:  [ 'rgb(0,0,0)', 'rgb(255,255,255)' ]\n    scale // 0 = best performance, lowest fidelity\n    // 1 = best fidelity, worst performance\n  } = opts;\n\n  if (scale > 1 || scale <= 0) {\n    console.warn(\n      `You set scale to ${scale}, which isn't between 0-1. This is either pointless (> 1) or a no-op (â‰¤ 0)`\n    );\n  }\n\n  return await getImageData(src, scale);\n}\n\nexport const analyze = (\n  data: Uint8ClampedArray\n): { color: string; count: number }[] => {\n  return getCounts(data, []);\n};\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AACA;AACA;AACA;AACA,eAMA;AACA;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC9DA;AAQA;AACA;AACA;AAFA;AAKA;AAIA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAGA;AACA;;;;A","sourceRoot":""}