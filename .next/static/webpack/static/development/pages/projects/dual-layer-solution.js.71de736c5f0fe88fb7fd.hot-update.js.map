{"version":3,"file":"static/webpack/static/development/pages/projects/dual-layer-solution.js.71de736c5f0fe88fb7fd.hot-update.js","sources":["webpack:///./components/Projects/AutoBackGroundColorSliderPage/index.tsx"],"sourcesContent":["import React, { FC, useRef, useState } from 'react';\nimport { useComponentDidMount } from '../../../utils/hooks/useComponentDidMount';\n// @ts-ignore\nimport findMainThemeWorker from 'worker-loader?name=static/[hash].worker.js!../../../utils/workers/findMainTheme.worker';\nimport getData, {analyze} from '../../../utils/rgbaster';\n\ninterface IProps {\n  src: string;\n  preview_src: string;\n  alt: string;\n}\n\nconst AutoBackGroundColorSliderPage: FC<IProps> = (props: IProps) => {\n  const { src, alt, preview_src } = props;\n  const [backgroundColor, setBackGroundColor] = useState('#e2e2e2');\n  useComponentDidMount(() => {\n    const img = new Image();\n    img.src = preview_src;\n    img.onload = () => {\n      getData(preview_src)\n        .then(value => {\n          const worker = new findMainThemeWorker();\n          worker.postMessage(value);\n          worker.onmessage = e => {\n            setBackGroundColor(e.data)\n          };\n        })\n        .catch(err => console.log(err));\n    };\n  });\n  return (\n    <div\n      className={'section'}\n      style={{\n        backgroundColor: backgroundColor,\n        transition: '0.6s ease-in-out'\n      }}\n    >\n      <img src={src} alt={alt} />\n    </div>\n  );\n};\n\nexport default AutoBackGroundColorSliderPage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}