{"version":3,"file":"static/webpack/static/development/pages/projects/dual-layer-solution.js.5cfc0c642d6e007e2665.hot-update.js","sources":["webpack:///./components/Projects/AutoBackGroundColorSliderPage/index.tsx","webpack:///./pages/projects/dual-layer-solution.tsx"],"sourcesContent":["import React, { FC, useRef, useState } from 'react';\nimport { useComponentDidMount } from '../../../utils/hooks/useComponentDidMount';\n// @ts-ignore\nimport findMainThemeWorker from 'worker-loader?name=static/[hash].worker.js!../../../utils/workers/findMainTheme.worker';\nimport analyze from '../../../utils/rgbaster';\nimport { css } from 'next/dist/build/webpack/config/blocks/css';\n\ninterface IProps {\n  src: string;\n  preview_src: string;\n  alt: string;\n}\n\nconst AutoBackGroundColorSliderPage: FC<IProps> = (props: IProps) => {\n  const { src, alt, preview_src } = props;\n  const [backgroundColor, setBackGroundColor] = useState('#ffffff');\n  useComponentDidMount(() => {\n    const img = new Image();\n    img.src = preview_src;\n    img.onload = () => {\n      const worker = new findMainThemeWorker();\n      worker.postMessage(src);\n      worker.onmessage = e => {\n        console.log(e);\n        console.log(JSON.stringify(e));\n      };\n      analyze(preview_src, img)\n        // analyze(src)\n        .then(value => {\n          if (value[0]) {\n            setBackGroundColor(value[0].color);\n          }\n        })\n        .catch(err => console.log(err));\n    };\n  });\n  return (\n    <div\n      className={'section'}\n      style={{\n        backgroundColor: backgroundColor\n      }}\n    >\n      <img src={src} alt={alt} />\n    </div>\n  );\n};\n\nexport default AutoBackGroundColorSliderPage;\n","import React, { FC } from 'react';\nimport styles from './dual-layer-solution.less';\nimport ReactFullpage from '@fullpage/react-fullpage';\nimport AutoBackGroundColorSliderPage from '../../components/Projects/AutoBackGroundColorSliderPage';\ninterface IProps {}\n\nconst DualLayerSolution: FC<IProps> = (props: IProps) => {\n  return (\n    <div className={styles['solution-layout']}>\n      <ReactFullpage //fullpage options\n        licenseKey={'YOUR_KEY_HERE'}\n        navigation={true}\n        scrollingSpeed={600} /* Options here */\n        render={() => {\n          return (\n            <ReactFullpage.Wrapper>\n              <AutoBackGroundColorSliderPage\n                preview_src={'/static/images/dualLayerSolution/1-preview.jpg'}\n                src={'/static/images/dualLayerSolution/1.jpg'}\n                alt={'slide1'}\n              />\n              <AutoBackGroundColorSliderPage\n                preview_src={'/static/images/dualLayerSolution/2-preview.jpg'}\n                src={'/static/images/dualLayerSolution/2.jpg'}\n                alt={'slide2'}\n              />\n              {/*<AutoBackGroundColorSliderPage*/}\n              {/*  src={'/static/images/dualLayerSolution/3.jpg'}*/}\n              {/*  alt={'slide3'}*/}\n              {/*/>*/}\n              {/*<AutoBackGroundColorSliderPage*/}\n              {/*  src={'/static/images/dualLayerSolution/4.jpg'}*/}\n              {/*  alt={'slide4'}*/}\n              {/*/>*/}\n              {/*<AutoBackGroundColorSliderPage*/}\n              {/*  src={'/static/images/dualLayerSolution/5.jpg'}*/}\n              {/*  alt={'slide5'}*/}\n              {/*/>*/}\n              {/*<AutoBackGroundColorSliderPage*/}\n              {/*  src={'/static/images/dualLayerSolution/6.jpg'}*/}\n              {/*  alt={'slide6'}*/}\n              {/*/>*/}\n              {/*<AutoBackGroundColorSliderPage*/}\n              {/*  src={'/static/images/dualLayerSolution/7.jpg'}*/}\n              {/*  alt={'slide7'}*/}\n              {/*/>*/}\n              {/*<AutoBackGroundColorSliderPage*/}\n              {/*  src={'/static/images/dualLayerSolution/8.jpg'}*/}\n              {/*  alt={'slide8'}*/}\n              {/*/>*/}\n            </ReactFullpage.Wrapper>\n          );\n        }}\n      />\n    </div>\n  );\n};\n\nexport default DualLayerSolution;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAHA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+BA;AA3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+CA;AACA;AACA;;;;A","sourceRoot":""}