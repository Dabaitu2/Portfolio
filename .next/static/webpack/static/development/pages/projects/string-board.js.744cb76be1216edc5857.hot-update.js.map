{"version":3,"file":"static/webpack/static/development/pages/projects/string-board.js.744cb76be1216edc5857.hot-update.js","sources":["webpack:///./components/LayoutHeader/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from './index.module.less';\nimport { CSSProperties, useCallback, useEffect, useRef, useState } from 'react';\nimport { useCurrentTab } from '../../utils/hooks/useCurrentTab';\nimport { useComponentDidMount } from '../../utils/hooks/useComponentDidMount';\nimport { useResizeCallback } from '../../utils/hooks/useResizeCallback';\n\ninterface MenuItem {\n  key: string;\n  label: string;\n}\n\ninterface IProps {\n  bodyStyle?: CSSProperties;\n  menuItems?: MenuItem[];\n}\n\nconst MenuItems: MenuItem[] = [\n  {\n    key: 'aboutMe',\n    label: 'About Me'\n  },\n  {\n    key: 'projects',\n    label: 'Projects'\n  }\n];\n\n/**\n * React-Hooks is much more powerful than you thought\n * @constructor\n */\nconst LayoutHeader: React.FC<IProps> = props => {\n  const {\n    state: {\n      currentTab: { currentTab },\n      scale: { scale }\n    },\n    actions: { setCurrentTab }\n  } = useCurrentTab();\n  // 设置小圆点的位置\n  const [dotX, setDotX] = useState(0);\n  const bodyWidth = useRef(null);\n  const _MenuItems = MenuItems.splice(0, 1).concat(props.menuItems || []).concat(MenuItems.slice(1)).map(item => ({\n    ...item,\n    ref: React.useRef()\n  }));\n  const { addCallback } = useResizeCallback();\n  const { IsDone } = useComponentDidMount(() => {\n    bodyWidth.current = document.getElementsByTagName('body')[0].offsetWidth;\n    menuItemClickHandler(_MenuItems[currentTab])();\n    addCallback(() => {\n      bodyWidth.current = document.getElementsByTagName('body')[0].offsetWidth;\n      menuItemClickHandler(_MenuItems[currentTab])();\n    });\n  });\n  const menuItemClickHandler = useCallback(\n    item => () => {\n      if (!IsDone) {\n        return;\n      }\n      const findIndex = _MenuItems.findIndex(m => {\n        return m.key === item.key;\n      });\n      if (!~findIndex) {\n        return;\n      }\n      const pageOffSetLeft = (bodyWidth.current - 1600 * scale) / 2;\n      const offsetLeft = item.ref.current.offsetLeft;\n      const offsetWidth = item.ref.current.offsetWidth;\n      setDotX((offsetLeft + offsetWidth / 2 - pageOffSetLeft - 8) / scale);\n      setCurrentTab(findIndex);\n    },\n    [bodyWidth, IsDone, scale]\n  );\n  useEffect(() => {\n    if (IsDone) {\n      menuItemClickHandler(_MenuItems[currentTab])();\n    }\n  }, [currentTab, scale, IsDone]);\n  return (\n    <div style={props.bodyStyle ?? {}}>\n      <div className={styles['layout-menu-container']}>\n        {_MenuItems.map(item => (\n          <span\n            key={item.key}\n            ref={item.ref}\n            className={styles['layout-menu-item']}\n            onClick={menuItemClickHandler(item)}\n          >\n            {item.label}\n          </span>\n        ))}\n      </div>\n      <div className={styles['layout-slider']}>\n        <span\n          className={styles['layout-slider-dot']}\n          style={{\n            transform: `translate(${dotX}rem, -8rem)`\n          }}\n        />\n        <div className={styles['layout-slider-line']} />\n      </div>\n    </div>\n  );\n};\n\nexport default LayoutHeader;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAYA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;;;;;AAIA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AASA;AACA;AAAA;AAAA;AAEA;AAFA;AAAA;AACA;AAZA;AAAA;AACA;AADA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AACA;AAuBA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAfA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}